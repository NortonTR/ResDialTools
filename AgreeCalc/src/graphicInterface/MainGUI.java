/*
    Este arquivo é parte do programa AgreeCalc
    
    AgreeCalc é um software livre; você pode redistribui-lo e/ou 

    modifica-lo dentro dos termos da Licença Pública Geral GNU como 

    publicada pela Fundação do Software Livre (FSF); na versão 2 da 

    Licença, ou qualquer versão.



    Este programa é distribuido na esperança que possa ser  util, 

    mas SEM NENHUMA GARANTIA; sem uma garantia implicita de ADEQUAÇÂO a qualquer

    MERCADO ou APLICAÇÃO EM PARTICULAR. Veja a

    Licença Pública Geral GNU para maiores detalhes.



    Você deve ter recebido uma cópia da Licença Pública Geral GNU

    junto com este programa, se não, escreva para a Fundação do Software

    Livre(FSF) Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 
 */


package graphicInterface;

import ferramentaic.RUser;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.*;
import java.net.URL;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.util.Locale;
import java.util.Map;
import java.util.ResourceBundle;
import javax.swing.JComponent;
import javax.swing.JWindow;
import javax.swing.UIManager;
import workers.AgreeCalcWorker;
import workers.RTester;


/**
 *
 * @author Alexandre
 */
public class MainGUI extends javax.swing.JFrame {


    /**
     * Creates new form MainGUI
     */
    public static final String VERSION = "1.2";
    public Locale local = new Locale("en");
    public boolean first = true;
    ResourceBundle bundle;
    
    public static boolean showDidntApplyChangesMsg, showLongProcessMsg, showForgetCorpusMsg, showIgnoreChangesMsg, showCantInterruptMessage;
    
    public MainGUI() {
       initComponents();
       setLocationRelativeTo(null);
       setIconImage(new ImageIcon(getClass().getResource("myicon.png")).getImage());  
       
       internacionaliza("en", "US", "English");
       
    }
    
    void internacionaliza(String loca1, String loca2, String EngFirst){
        local = new Locale(loca1, loca2);
        bundle = ResourceBundle.getBundle("i18n.MyBundle", local);
        LanguageCombo.removeAllItems();
        if(EngFirst.equals("English")) {
            LanguageCombo.addItem(bundle.getString("English"));
            LanguageCombo.addItem(bundle.getString("Portuguese"));
        } else {
            LanguageCombo.addItem(bundle.getString("Portuguese"));
            LanguageCombo.addItem(bundle.getString("English"));
        }
        this.setTitle(bundle.getString("Welcome"));
        LanguageLabel.setText(bundle.getString("Language"));
        Label1.setText(bundle.getString("AgreeCalcBrief1"));
        Label2.setText(bundle.getString("AgreeCalcBrief2"));
        Label3.setText(bundle.getString("AgreeCalcBrief3"));
        Botao_avancar.setText(bundle.getString("Advance"));
        JComponent.setDefaultLocale(local);
        UIManager.put("FileChooser.acceptAllFileFilterText",bundle.getString("FileChooserAllFilesTooltip"));
        //System.out.println(EngFirst);
    }
    
    static MainGUI eu;
    
    public static MainGUI getInstance(){
        if(eu==null){
            eu = new MainGUI();
        }
        return eu;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Botao_avancar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        Label1 = new javax.swing.JLabel();
        Label2 = new javax.swing.JLabel();
        Label3 = new javax.swing.JLabel();
        LanguageLabel = new javax.swing.JLabel();
        LanguageCombo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(200, 232, 201));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        Botao_avancar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Botao_avancarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                Botao_avancarMouseReleased(evt);
            }
        });
        Botao_avancar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_avancarActionPerformed(evt);
            }
        });
        Botao_avancar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Botao_avancarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Botao_avancarKeyReleased(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/logo_extenso.png"))); // NOI18N

        Label1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        Label1.setForeground(new java.awt.Color(51, 51, 51));
        Label1.setText("AgreeCalc é uma ferramenta desenvolvida para área de Linguística Computacional, ");

        Label2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        Label2.setForeground(new java.awt.Color(51, 51, 51));
        Label2.setText("e tem por objetivo determinar o coeficiente de concordância entre múltiplos ano-");

        Label3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        Label3.setForeground(new java.awt.Color(51, 51, 51));
        Label3.setText("tadores de um esquema de anotação.");

        LanguageLabel.setText("jLabel1");

        LanguageCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                LanguageComboItemStateChanged(evt);
            }
        });
        LanguageCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LanguageComboActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Label3)
                    .addComponent(Label1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(LanguageLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(LanguageCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(Botao_avancar, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Label2)))
                .addGap(145, 145, 145)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LanguageCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LanguageLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Label1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Label2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Label3)
                        .addGap(9, 9, 9)
                        .addComponent(Botao_avancar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    boolean verificaPrimeiroAcesso(){
        File f = new File("R_sourcepath.txt");
        if(f.exists()){
            boolean ok = false;
            try {
            FileReader read = new FileReader(f);
            //AQUI
            
            
                BufferedReader in = new BufferedReader(read);
                String str;
                ok = false;
                while (in.ready()) {
                    str = in.readLine();
                    ok = true;
                    break;
                }
                in.close();
            } catch (IOException e) {
                ok = false;
            }
            
            if(ok) return true;
        }
        JFileChooser open = new JFileChooser();
        open.setLocale(local);
        open.setFileSelectionMode(0);
        open.setApproveButtonText(bundle.getString("Select"));
        open.setDialogTitle(bundle.getString("RScriptSelect"));
        
        boolean bool = true;
         do{
            int op = open.showOpenDialog(this);  
            if(op == JFileChooser.APPROVE_OPTION){ 
                
                AgreeCalcWorker w = new RTester(bundle,open.getSelectedFile());
                DialogoProgresso d = new DialogoProgresso(this.getRootPane(),w,bundle);
                d.setVisible(true);
                bool = (Boolean) d.getResponse();
                
                if(bool){
                    JOptionPane.showMessageDialog(null, bundle.getString("RpathChangeSuccessful"),bundle.getString("InformationTitle"),JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, bundle.getString("RpathChangeUnsuccessful"),bundle.getString("InformationTitle"),JOptionPane.ERROR_MESSAGE);
                }
            } 
        }while(!bool);
        
        return bool;
    }
    
    
    private void Botao_avancarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_avancarActionPerformed
        
            // TODO add your handling code here:
        if(!verificaPrimeiroAcesso()) return;
        String[] args = new String[2];
        args[0] = local.getLanguage();
        args[1] = this.getClass().getCanonicalName();
        //System.out.println(args[0]);
        SelectionWindowGUI.main(args);
        eu.setVisible(false);
    }//GEN-LAST:event_Botao_avancarActionPerformed

    private void Botao_avancarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Botao_avancarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_Botao_avancarKeyPressed

    private void Botao_avancarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Botao_avancarKeyReleased
        // TODO add your handling code here:
       
    }//GEN-LAST:event_Botao_avancarKeyReleased

    private void Botao_avancarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Botao_avancarMousePressed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Botao_avancarMousePressed

    private void Botao_avancarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Botao_avancarMouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_Botao_avancarMouseReleased

    private void LanguageComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LanguageComboActionPerformed
        // TODO add your handling code here:
        if(first){
            first = false;
            return;
        }
        if(LanguageCombo.getSelectedItem() != null)
            if(LanguageCombo.getSelectedItem().toString().equals("English"))
                internacionaliza("en", "US", "English");
            else
                internacionaliza("pt", "BR", "Português");
    }//GEN-LAST:event_LanguageComboActionPerformed

    private void LanguageComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_LanguageComboItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_LanguageComboItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        
        try {
            // copy progress bar defaults
            HashMap<Object, Object> progressDefaults = new HashMap<>();
            for(Map.Entry<Object, Object> entry : UIManager.getDefaults().entrySet()){
                if(entry.getKey().getClass() == String.class && ((String)entry.getKey()).startsWith("ProgressBar")){
                    progressDefaults.put(entry.getKey(), entry.getValue());
                }
            }
            
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
            
            // copy back progress bar defaults
            for(Map.Entry<Object, Object> entry : progressDefaults.entrySet()){
                UIManager.getDefaults().put(entry.getKey(), entry.getValue());
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /*
         * Create and display the form
         */
        readConfigs();
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
               eu = MainGUI.getInstance();
               eu.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Botao_avancar;
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel Label2;
    private javax.swing.JLabel Label3;
    private javax.swing.JComboBox LanguageCombo;
    private javax.swing.JLabel LanguageLabel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    private static void readConfigs() {
        FileReader fr;
        
        showDidntApplyChangesMsg=showForgetCorpusMsg=showIgnoreChangesMsg=showLongProcessMsg=showCantInterruptMessage=true;
        try {
            fr = new FileReader("configs.txt");
            
            BufferedReader br = new BufferedReader(fr);
            String s;
            while((s = br.readLine()) != null) { 
                String[] params = s.split("=");
                if(params.length>1){
                    boolean val = getValue(params[1]);
                    switch(params[0]){
                        case "showDidntApplyChangesMsg":
                            showDidntApplyChangesMsg=val;
                            break;
                        case "showForgetCorpusMsg":
                            showForgetCorpusMsg=val;
                            break;
                        case "showLongProcessMsg":
                            showLongProcessMsg=val;
                            break;
                        case "showIgnoreChangesMsg":
                            showIgnoreChangesMsg=val;
                            break;
                        case "showCantInterruptMessage":
                            showCantInterruptMessage=val;
                            break;
                        default: break;
                    }
                }
            }
            fr.close(); 
        } catch (Exception ex) {
        }   
    }

    private static boolean getValue(String param) {
        switch(param.toLowerCase()){
            case "true": return true;
            default: return false;
        }
    }
    
    static void gravarConfigs() {
        FileWriter fw;
        
        try {
            fw = new FileWriter("configs.txt");
            BufferedWriter b = new BufferedWriter(fw);
            
            b.write("showDidntApplyChangesMsg="+showDidntApplyChangesMsg+"\n"+
                    "showForgetCorpusMsg="+showForgetCorpusMsg+"\n"+
                    "showLongProcessMsg="+showLongProcessMsg+"\n"+
                    "showCantInterruptMessage="+showCantInterruptMessage+"\n"+
                    "showIgnoreChangesMsg="+showIgnoreChangesMsg);
            b.close();
            fw.close();
        } catch (Exception ex) {
            
        }
    }
}
