package MetaAnn;

import common.Parser;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.tools.JavaCompiler;
import javax.tools.ToolProvider;

import javax.swing.JFileChooser;
import MetaAnn.file.FiltroArquivo;
import java.awt.Desktop;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.Arrays;
import java.util.Enumeration;
import java.util.List;
import javafx.scene.paint.Color;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Tiago Missão
 */
public class MetaAnn extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public MetaAnn() {
        initComponents();
        setIcon();
        addWindowListener(aoFecharJanela());
        Lista_de_Categorias.setModel(CATEGORIAS_MODEL);
        Lista_Corpus.setModel(CORPUS_MODEL);
        Lista_de_Informacoes_Corpus.setModel(INFORMACOES_EXTRA_CORPUS_MODEL);
        Lista_de_Informacoes_Ferramenta_Gerada.setModel(INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL);
        carregaExtra();
        
        //Ocultar o botão
        Botao_Configuracao.setVisible(false);
        
        //Controlar os botões
        this.controlarBotoes();
    }
    
    public MetaAnn(Locale locale){
        this();
        this.locale = locale;
        internacionaliza();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    private ArrayList<Categoria> CATEGORIAS = new ArrayList<Categoria>();
    private TreeMap<String,String> INFORMACOES_EXTRAS = new TreeMap<String,String>();
    private ArrayList<File> CORPUS = new ArrayList<File>();
    private DefaultListModel CATEGORIAS_MODEL = new DefaultListModel();
    private DefaultListModel<String> CORPUS_MODEL = new DefaultListModel();
    private DefaultListModel OPCOES_MODEL = new DefaultListModel(); // Modelo Em "Branco" usado apenas para resetar o Componente
    private DefaultListModel<String> INFORMACOES_EXTRA_CORPUS_MODEL = new DefaultListModel();
    private DefaultListModel<String> INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL = new DefaultListModel();
    private BufferedWriter bw;
    private File DIRETORIO;
    private File GENERATED_TOOLS = new File("GENERATED_TOOLS");
    private File PROJETO;
    private Locale locale;
    private int contCategs = 0;
    private File ULTIMO_DIRETORIO;
    private String PRIMEIRO_ARQUIVO = "";
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        Botao_Configuracao = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        Lista_Corpus = new javax.swing.JList<>();
        Botao_Adiciona_Corpus = new javax.swing.JButton();
        Botao_Remover_Corpus = new javax.swing.JButton();
        Botao_Corpus_Abaixo = new javax.swing.JButton();
        Botao_Corpus_Acima = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Lista_Opcoes_da_Categoria = new javax.swing.JList();
        Botao_Categoria_Acima = new javax.swing.JButton();
        Botao_Categoria_Abaixo = new javax.swing.JButton();
        Text_Identificador_da_Categoria = new javax.swing.JTextField();
        Text_Tipo_da_Categoria = new javax.swing.JTextField();
        jLabelTipoDaOpcao = new javax.swing.JLabel();
        jLabelIdentificador = new javax.swing.JLabel();
        Botao_Remover_Categoria = new javax.swing.JButton();
        Botao_Editar_Categoria = new javax.swing.JButton();
        Botao_Adiciona_Categoria = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Lista_de_Categorias = new javax.swing.JList();
        jLabelPrincipal = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabelExtra = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Lista_de_Informacoes_Corpus = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        Lista_de_Informacoes_Ferramenta_Gerada = new javax.swing.JList();
        Button_Inclui_Informacao_Extra = new javax.swing.JButton();
        Button_Exclui_Informacao_Extra = new javax.swing.JButton();
        Button_Edita_Informacao_Extra = new javax.swing.JButton();
        jLabelExtra1 = new javax.swing.JLabel();
        jLabelExtra3 = new javax.swing.JLabel();
        jLabelExtra2 = new javax.swing.JLabel();
        jButton_Volta1 = new javax.swing.JButton();
        jButton_Vai1 = new javax.swing.JButton();
        Botao_Cancelar = new javax.swing.JButton();
        Botao_Finalizar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuSettings = new javax.swing.JMenu();
        jMenuLanguage = new javax.swing.JMenu();
        jMenuItemPortugues = new javax.swing.JMenuItem();
        jMenuItemEnglish = new javax.swing.JMenuItem();
        jMenuAjuda = new javax.swing.JMenu();
        itemManual = new javax.swing.JMenuItem();
        itemSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("MetaAnn");
        setResizable(false);

        jPanel4.setPreferredSize(new java.awt.Dimension(321, 232));

        Botao_Configuracao.setText("Configurações");
        Botao_Configuracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_ConfiguracaoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText(" Corpus");

        jScrollPane5.setViewportView(Lista_Corpus);

        Botao_Adiciona_Corpus.setText("Adicionar");
        Botao_Adiciona_Corpus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_Adiciona_CorpusActionPerformed(evt);
            }
        });

        Botao_Remover_Corpus.setText("Remover");
        Botao_Remover_Corpus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_Remover_CorpusActionPerformed(evt);
            }
        });

        Botao_Corpus_Abaixo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MetaAnn/seta_baixo.png"))); // NOI18N
        Botao_Corpus_Abaixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_Corpus_AbaixoActionPerformed(evt);
            }
        });

        Botao_Corpus_Acima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MetaAnn/seta_cima.png"))); // NOI18N
        Botao_Corpus_Acima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_Corpus_AcimaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(Botao_Adiciona_Corpus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Botao_Remover_Corpus)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Botao_Corpus_Abaixo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Botao_Corpus_Acima, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Botao_Configuracao)
                        .addGap(79, 79, 79)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Botao_Configuracao)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(Botao_Corpus_Acima, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Botao_Corpus_Abaixo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Botao_Adiciona_Corpus)
                    .addComponent(Botao_Remover_Corpus))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Lista_Opcoes_da_Categoria.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));
        Lista_Opcoes_da_Categoria.setEnabled(false);
        jScrollPane3.setViewportView(Lista_Opcoes_da_Categoria);

        Botao_Categoria_Acima.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MetaAnn/seta_cima.png"))); // NOI18N
        Botao_Categoria_Acima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_Categoria_AcimaActionPerformed(evt);
            }
        });

        Botao_Categoria_Abaixo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MetaAnn/seta_baixo.png"))); // NOI18N
        Botao_Categoria_Abaixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_Categoria_AbaixoActionPerformed(evt);
            }
        });

        Text_Identificador_da_Categoria.setEnabled(false);

        Text_Tipo_da_Categoria.setEnabled(false);
        Text_Tipo_da_Categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Text_Tipo_da_CategoriaActionPerformed(evt);
            }
        });

        jLabelTipoDaOpcao.setText("Tipo da Categoria");

        jLabelIdentificador.setText("Identificador da Categoria");

        Botao_Remover_Categoria.setText("Remover");
        Botao_Remover_Categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_Remover_CategoriaActionPerformed(evt);
            }
        });

        Botao_Editar_Categoria.setMnemonic('E');
        Botao_Editar_Categoria.setText("Editar");
        Botao_Editar_Categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_Editar_CategoriaActionPerformed(evt);
            }
        });

        Botao_Adiciona_Categoria.setMnemonic('A');
        Botao_Adiciona_Categoria.setText("Adicionar");
        Botao_Adiciona_Categoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_Adiciona_CategoriaActionPerformed(evt);
            }
        });

        Lista_de_Categorias.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        Lista_de_Categorias.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Lista_de_CategoriasMouseClicked(evt);
            }
        });
        Lista_de_Categorias.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Lista_de_CategoriasValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(Lista_de_Categorias);

        jLabelPrincipal.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelPrincipal.setText(" Categorias a serem Implementadas");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(Botao_Adiciona_Categoria)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Botao_Editar_Categoria)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(Botao_Remover_Categoria))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Botao_Categoria_Abaixo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(Botao_Categoria_Acima, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jLabelIdentificador, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabelTipoDaOpcao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(55, 55, 55)))
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(Text_Identificador_da_Categoria, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                        .addComponent(Text_Tipo_da_Categoria, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Botao_Adiciona_Categoria, Botao_Editar_Categoria, Botao_Remover_Categoria});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabelPrincipal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(Botao_Categoria_Acima, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Botao_Categoria_Abaixo)
                                .addGap(19, 19, 19)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Botao_Adiciona_Categoria)
                            .addComponent(Botao_Editar_Categoria)
                            .addComponent(Botao_Remover_Categoria))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelTipoDaOpcao, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Text_Tipo_da_Categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelIdentificador)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Text_Identificador_da_Categoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Botao_Adiciona_Categoria, Botao_Editar_Categoria, Botao_Remover_Categoria});

        jSeparator3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE))))
                .addGap(66, 66, 66))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Principal", jPanel1);

        jLabelExtra.setText(" Informações extras são dados adicionais existentes nas tags <info> do corpus. Por exemplo: se o corpus");

        Lista_de_Informacoes_Corpus.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        Lista_de_Informacoes_Corpus.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Lista_de_Informacoes_CorpusValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(Lista_de_Informacoes_Corpus);

        Lista_de_Informacoes_Ferramenta_Gerada.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        Lista_de_Informacoes_Ferramenta_Gerada.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                Lista_de_Informacoes_Ferramenta_GeradaValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(Lista_de_Informacoes_Ferramenta_Gerada);

        Button_Inclui_Informacao_Extra.setText(">>");
        Button_Inclui_Informacao_Extra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_Inclui_Informacao_ExtraActionPerformed(evt);
            }
        });

        Button_Exclui_Informacao_Extra.setText("<<");
        Button_Exclui_Informacao_Extra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_Exclui_Informacao_ExtraActionPerformed(evt);
            }
        });

        Button_Edita_Informacao_Extra.setText("Editar Nome da Informação");
        Button_Edita_Informacao_Extra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Button_Edita_Informacao_ExtraActionPerformed(evt);
            }
        });

        jLabelExtra1.setText(" possui, na sua estrutura, a tag <info type=\"id\" value=\"0002\" /> isso significa que a informação extra \"id\"");

        jLabelExtra3.setText(" Passe para a lista da direita as informações extras do corpus que deseja adicionar à sua ferramenta.");

        jLabelExtra2.setText(" tem valor \"0002\".");

        jButton_Volta1.setText("<");
        jButton_Volta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Volta1ActionPerformed(evt);
            }
        });

        jButton_Vai1.setText(">");
        jButton_Vai1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_Vai1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelExtra1, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                    .addComponent(jLabelExtra3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelExtra)
                            .addComponent(jLabelExtra2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Button_Edita_Informacao_Extra, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(Button_Inclui_Informacao_Extra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Button_Exclui_Informacao_Extra, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton_Vai1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jButton_Volta1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabelExtra)
                .addGap(4, 4, 4)
                .addComponent(jLabelExtra1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelExtra2)
                .addGap(23, 23, 23)
                .addComponent(jLabelExtra3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                            .addComponent(jScrollPane1)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(Button_Inclui_Informacao_Extra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Vai1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton_Volta1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Button_Exclui_Informacao_Extra)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Button_Edita_Informacao_Extra)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Extra", jPanel2);

        Botao_Cancelar.setText("Cancelar");
        Botao_Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_CancelarActionPerformed(evt);
            }
        });

        Botao_Finalizar.setText("Finalizar");
        Botao_Finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Botao_FinalizarActionPerformed(evt);
            }
        });

        jMenuFile.setMnemonic('A');
        jMenuFile.setText("Arquivo");

        jMenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemExit.setText("Sair");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuSettings.setMnemonic('C');
        jMenuSettings.setText("Configurações");

        jMenuLanguage.setMnemonic('L');
        jMenuLanguage.setText("Língua");

        jMenuItemPortugues.setMnemonic('P');
        jMenuItemPortugues.setText("Português");
        jMenuItemPortugues.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPortuguesActionPerformed(evt);
            }
        });
        jMenuLanguage.add(jMenuItemPortugues);

        jMenuItemEnglish.setMnemonic('E');
        jMenuItemEnglish.setText("English");
        jMenuItemEnglish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEnglishActionPerformed(evt);
            }
        });
        jMenuLanguage.add(jMenuItemEnglish);

        jMenuSettings.add(jMenuLanguage);

        jMenuBar1.add(jMenuSettings);

        jMenuAjuda.setMnemonic('j');
        jMenuAjuda.setText("Ajuda");

        itemManual.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        itemManual.setText("Manual de Funcionalidades");
        itemManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemManualActionPerformed(evt);
            }
        });
        jMenuAjuda.add(itemManual);

        itemSobre.setMnemonic('S');
        itemSobre.setText("Sobre o MetaAnn");
        itemSobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemSobreActionPerformed(evt);
            }
        });
        jMenuAjuda.add(itemSobre);

        jMenuBar1.add(jMenuAjuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 607, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Botao_Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Botao_Finalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Botao_Finalizar)
                    .addComponent(Botao_Cancelar))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    

    void internacionaliza(){
        
       ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.MetaAnn.MetaAnn", locale);
        
        Botao_Adiciona_Categoria.setText(bundle.getString("adicionar"));
        Botao_Adiciona_Corpus.setText(bundle.getString("adicionar"));
        Botao_Editar_Categoria.setText(bundle.getString("editar"));
        Botao_Remover_Categoria.setText(bundle.getString("remover"));
        Botao_Remover_Corpus.setText(bundle.getString("remover"));
        Botao_Cancelar.setText(bundle.getString("cancelar"));
        Botao_Configuracao.setText(bundle.getString("configuracao"));   
        Botao_Finalizar.setText(bundle.getString("finalizar"));
        jLabelPrincipal.setText(bundle.getString("mensagemPrincipal"));
        jLabelIdentificador.setText(bundle.getString("identificador"));
        jLabelTipoDaOpcao.setText(bundle.getString("tipo"));
        Lista_Opcoes_da_Categoria.setBorder(javax.swing.BorderFactory.createTitledBorder(bundle.getString("opcoes")));
        jTabbedPane1.setTitleAt(0, bundle.getString("principal"));
        jTabbedPane1.setTitleAt(1, bundle.getString("extra"));
        jLabelExtra.setText(bundle.getString("mensagemPanelExtra"));
        jLabelExtra1.setText(bundle.getString("mensagemPanelExtra1"));
        jLabelExtra2.setText(bundle.getString("mensagemPanelExtra2"));
        jLabelExtra3.setText(bundle.getString("mensagemPanelExtra3"));
        Button_Edita_Informacao_Extra.setText(bundle.getString("botaoEditar"));
        jMenuFile.setText(bundle.getString("arquivo"));
        jMenuItemExit.setText(bundle.getString("sair"));
        jMenuSettings.setText(bundle.getString("configuracoes"));
        jMenuLanguage.setText(bundle.getString("lingua"));
        jMenuAjuda.setText(bundle.getString("ajuda"));
        itemManual.setText(bundle.getString("manual"));
        itemSobre.setText(bundle.getString("sobre"));
        
        //Internacionalizar o Mnemonic
        if(locale.getLanguage().equals("en"))
        {
            jMenuFile.setMnemonic('F');
            jMenuSettings.setMnemonic('S');
            jMenuAjuda.setMnemonic('H');
            itemSobre.setMnemonic('A');
        }
        else
            if(locale.getLanguage().equals("pt"))
            {
                jMenuFile.setMnemonic('A');
                jMenuSettings.setMnemonic('C');
                jMenuAjuda.setMnemonic('j');
                itemSobre.setMnemonic('S');
            }
    }
    
    public void setLocale(Locale locale){
        this.locale = locale;
    }
    
    public Locale getLocale(){
        return this.locale;
    }
    
    public ArrayList<Categoria> getCategorias(){
        return this.CATEGORIAS;
    }
    
    
    public void createProjectFolder(String directory, String project){
        this.GENERATED_TOOLS = new File(directory);
        this.PROJETO   = new File(GENERATED_TOOLS,project);
        this.DIRETORIO = new File(PROJETO,"source"); 
        GENERATED_TOOLS.mkdir();
        PROJETO.mkdir();
    }
    public void ConstroiClasses(Locale ferramentaLocale, String nomeProjeto){
        
       TreeMap<String,String> extras = new TreeMap<String,String>();
       
       for(int i = 0; i<INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.size();i++){
           String key = INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.get(i);
           if(INFORMACOES_EXTRAS.containsKey(key)){
               extras.put(key,INFORMACOES_EXTRAS.get(key));
           }
       }
        
       constroiDocument();
       constroiPlainDocument(extras);
       constroiArquivo(extras);
       constroiAviso(ferramentaLocale, nomeProjeto);
       constroiMain(ferramentaLocale,extras,nomeProjeto);
       clonaArquivosConfig();
       transfereIcon();
       clonaLib();
       constroiJar();
       criaDiretorioDados();
       moveJar();
        
    }
    
    public void EditaValorInformacaoExtra(int index, String novoValor, int lista){
         
         System.out.println(index);
         System.out.println(lista);
         
         if(lista == 1){
         
             String atributo = INFORMACOES_EXTRAS.get(INFORMACOES_EXTRA_CORPUS_MODEL.get(index));
             INFORMACOES_EXTRAS.remove(INFORMACOES_EXTRA_CORPUS_MODEL.get(index));
             INFORMACOES_EXTRAS.put(novoValor, atributo);
             
            INFORMACOES_EXTRA_CORPUS_MODEL.remove(index);
            INFORMACOES_EXTRA_CORPUS_MODEL.add(index, novoValor);
           
         }
         
         else{
             
            String atributo = INFORMACOES_EXTRAS.get(INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.get(index));
            INFORMACOES_EXTRAS.remove(INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.get(index));
            INFORMACOES_EXTRAS.put(novoValor, atributo);
             
            INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.remove(index);
            INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.add(index, novoValor);
             
         }
         
     }                                                                                           
	
    private void Button_Exclui_Informacao_ExtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_Exclui_Informacao_ExtraActionPerformed
               
        while(INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.size()!=0){
            
            int index = 0;
            INFORMACOES_EXTRA_CORPUS_MODEL.addElement(INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.get(index));
            INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.remove(index);
            
        }
        
    }//GEN-LAST:event_Button_Exclui_Informacao_ExtraActionPerformed

    private void Lista_de_Informacoes_CorpusValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Lista_de_Informacoes_CorpusValueChanged
        
        Lista_de_Informacoes_Ferramenta_Gerada.clearSelection();
        
    }//GEN-LAST:event_Lista_de_Informacoes_CorpusValueChanged

    private void Lista_de_Informacoes_Ferramenta_GeradaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Lista_de_Informacoes_Ferramenta_GeradaValueChanged
        
        Lista_de_Informacoes_Corpus.clearSelection();
        
    }//GEN-LAST:event_Lista_de_Informacoes_Ferramenta_GeradaValueChanged

    private void Button_Inclui_Informacao_ExtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_Inclui_Informacao_ExtraActionPerformed
      
        while(INFORMACOES_EXTRA_CORPUS_MODEL.size()!=0){
        
            int index = 0;
            INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.addElement(INFORMACOES_EXTRA_CORPUS_MODEL.get(index));
            INFORMACOES_EXTRA_CORPUS_MODEL.remove(index);
            
        }
    }//GEN-LAST:event_Button_Inclui_Informacao_ExtraActionPerformed

    private void Button_Edita_Informacao_ExtraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Button_Edita_Informacao_ExtraActionPerformed
        
        
        if(!Lista_de_Informacoes_Corpus.isSelectionEmpty() || !Lista_de_Informacoes_Ferramenta_Gerada.isSelectionEmpty()){
            
            if(!Lista_de_Informacoes_Corpus.isSelectionEmpty()){
                
                int index = Lista_de_Informacoes_Corpus.getSelectedIndex();
                    //this.setVisible(false);
                    new JFrameInformacaoExtra(INFORMACOES_EXTRA_CORPUS_MODEL.get(index),this,index,1,locale).setVisible(true);                
            }
            
            if(!Lista_de_Informacoes_Ferramenta_Gerada.isSelectionEmpty()){
                
                int index = Lista_de_Informacoes_Ferramenta_Gerada.getSelectedIndex();
                    //this.setVisible(false);
                    new JFrameInformacaoExtra(INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.get(index),this,index,2,locale).setVisible(true);                
            }
            
        }
        
    }//GEN-LAST:event_Button_Edita_Informacao_ExtraActionPerformed

    private void Botao_FinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_FinalizarActionPerformed
        /*
        * Inicia a Construçao do Anotador
        * O metodo inicia classe altera o valor de bw
        */

        new ConfiguracaoFerramenta(locale,this).setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_Botao_FinalizarActionPerformed

    private WindowListener aoFecharJanela() {
            return new WindowAdapter() 
            {
                    public void windowClosing(WindowEvent evt) {
                            Botao_CancelarActionPerformed(null);
                    }
            };
    }
    
    private void Botao_CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_CancelarActionPerformed

        ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.MetaAnn.MetaAnn", locale);
        
        JOptionPane.setDefaultLocale(locale);
        int sair = JOptionPane.showConfirmDialog(this, bundle.getString("confirmaSair"), "MetaAnn - " + bundle.getString("aviso"), JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
        
        if(sair==JOptionPane.YES_OPTION)
            System.exit(0);
    }//GEN-LAST:event_Botao_CancelarActionPerformed

    private void Botao_Categoria_AbaixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_Categoria_AbaixoActionPerformed

        /*
        *  Altera a ordem das Categorias, movimentando a categoria selecionada para baixo
        */

        int indice;

        if(!Lista_de_Categorias.isSelectionEmpty() && (indice = Lista_de_Categorias.getSelectedIndex()) < CATEGORIAS_MODEL.size()-1){
            Categoria temp = CATEGORIAS.get(indice);
            CATEGORIAS.remove(indice);
            CATEGORIAS_MODEL.remove(indice);
            CATEGORIAS.add(indice + 1, temp);
            CATEGORIAS_MODEL.add(indice + 1, temp.getNome_da_Categoria());
            Lista_de_Categorias.setSelectedIndex(indice + 1);
        }
    }//GEN-LAST:event_Botao_Categoria_AbaixoActionPerformed

    private void Botao_Categoria_AcimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_Categoria_AcimaActionPerformed
        /*
        * Altera a ordem das Categorias, movimentando a categoria selecionada
        * para cima
        */

        int indice;

        if (!Lista_de_Categorias.isSelectionEmpty() && (indice = Lista_de_Categorias.getSelectedIndex()) > 0) {
            Categoria temp = CATEGORIAS.get(indice);
            CATEGORIAS.remove(indice);
            CATEGORIAS_MODEL.remove(indice);
            CATEGORIAS.add(indice - 1, temp);
            CATEGORIAS_MODEL.add(indice - 1, temp.getNome_da_Categoria());
            Lista_de_Categorias.setSelectedIndex(indice - 1);
        }
    }//GEN-LAST:event_Botao_Categoria_AcimaActionPerformed

    private void Lista_de_CategoriasValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_Lista_de_CategoriasValueChanged

        /*
        * Carrega as Caracteristicas da Categoria Selecionada
        */
        ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.MetaAnn.MetaAnn", locale);

        if(!Lista_de_Categorias.isSelectionEmpty()){

            Categoria temp = CATEGORIAS.get(Lista_de_Categorias.getSelectedIndex());

            Text_Identificador_da_Categoria.setText(temp.getIdentificador_da_Categoria());
            if(temp.getTipo_da_Categoria()==0){
                Text_Tipo_da_Categoria.setText(bundle.getString("mutuamenteExc"));
                Lista_Opcoes_da_Categoria.setModel(temp.getOpcoesModel());
            }
            else if(temp.getTipo_da_Categoria()==1){
                Text_Tipo_da_Categoria.setText(bundle.getString("listaSimples"));
                Lista_Opcoes_da_Categoria.setModel(temp.getOpcoesModel());
            }
            else{
                Text_Tipo_da_Categoria.setText(bundle.getString("campoTextual"));
                Lista_Opcoes_da_Categoria.setModel(temp.getOpcoesModel());
            }
        }
        
        this.controlarBotoes();
        
    }//GEN-LAST:event_Lista_de_CategoriasValueChanged

    private void Lista_de_CategoriasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Lista_de_CategoriasMouseClicked
        
               
        /*
         *  Evento de duplo click para habilitar a edição
         */
        
        if(evt.getClickCount()==2) Botao_Editar_CategoriaActionPerformed(null);
        
    }//GEN-LAST:event_Lista_de_CategoriasMouseClicked

    private void Text_Tipo_da_CategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Text_Tipo_da_CategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Text_Tipo_da_CategoriaActionPerformed

    private void Botao_Adiciona_CategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_Adiciona_CategoriaActionPerformed

        /*
        *  Abre a janela JFrameCategoria para receber o dados, afim de cadastrar a nova categoria
        */

        new JFrameCategoria(this,locale).setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_Botao_Adiciona_CategoriaActionPerformed

    private void Botao_Editar_CategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_Editar_CategoriaActionPerformed

        /*
        * !!! Pode receber NULL como argumento !!!!
        *
        * Abre uma a janela JFrameCategoria com os dados da Categoria Selecionar, afim de possibilitar a edição
        */

        if(!Lista_de_Categorias.isSelectionEmpty()){
            Categoria categoria = CATEGORIAS.get(Lista_de_Categorias.getSelectedIndex());
            new JFrameCategoria(this,categoria,locale).setVisible(true);
            this.setEnabled(false);
        }
    }//GEN-LAST:event_Botao_Editar_CategoriaActionPerformed

    private void Botao_Remover_CategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_Remover_CategoriaActionPerformed

        /*
        * Remove a Categoria Selecionada
        */
        ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.MetaAnn.MetaAnn", locale);
        
        if(!Lista_de_Categorias.isSelectionEmpty()){
            
            //Confirmar se o usuário deseja mesmo excluir a categoria
            int resposta = JOptionPane.showConfirmDialog(this, bundle.getString("confirmaRemoverCategoria"), bundle.getString("aviso"), JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            
            if(resposta == JOptionPane.YES_OPTION)
            {
                int indice = Lista_de_Categorias.getSelectedIndex();
                CATEGORIAS.remove(indice);
                CATEGORIAS_MODEL.remove(indice);
                Lista_Opcoes_da_Categoria.setModel(OPCOES_MODEL);
                Text_Tipo_da_Categoria.setText("");
                Text_Identificador_da_Categoria.setText("");
            }
        }
        
        this.controlarBotoes();
    }//GEN-LAST:event_Botao_Remover_CategoriaActionPerformed

    private void Botao_Corpus_AcimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_Corpus_AcimaActionPerformed
        // TODO add your handling code here:

        int indice;

        if (!Lista_Corpus.isSelectionEmpty() && (indice = Lista_Corpus.getSelectedIndex()) > 0) {
            String temp = CORPUS_MODEL.get(indice);
            CORPUS_MODEL.remove(indice);
            CORPUS_MODEL.add(indice - 1, temp);
            Lista_Corpus.setSelectedIndex(indice - 1);
        }

        //Código para verificar informações extras
        verificaPrimeiroArquivo();

    }//GEN-LAST:event_Botao_Corpus_AcimaActionPerformed

    private void Botao_Corpus_AbaixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_Corpus_AbaixoActionPerformed
        // TODO add your handling code here:

        int indice;

        if (!Lista_Corpus.isSelectionEmpty() && (indice = Lista_Corpus.getSelectedIndex()) < CORPUS_MODEL.getSize()-1) {
            String temp = CORPUS_MODEL.get(indice);
            CORPUS_MODEL.remove(indice);
            CORPUS_MODEL.add(indice + 1, temp);
            Lista_Corpus.setSelectedIndex(indice + 1);
        }

        //Código para verificar informações extras
        verificaPrimeiroArquivo();

    }//GEN-LAST:event_Botao_Corpus_AbaixoActionPerformed

    private void Botao_Remover_CorpusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_Remover_CorpusActionPerformed
        // TODO add your handling code here:
        int ind;

        while(!this.Lista_Corpus.isSelectionEmpty())
        {
            //Obter registro selecionado
            ind = this.Lista_Corpus.getSelectedIndex();

            this.CORPUS.remove(new File(this.CORPUS_MODEL.get(ind)));
            this.CORPUS_MODEL.remove(ind);
        }

        //Código para verificar informações extras
        verificaPrimeiroArquivo();

    }//GEN-LAST:event_Botao_Remover_CorpusActionPerformed

    private void Botao_Adiciona_CorpusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_Adiciona_CorpusActionPerformed
        // TODO add your handling code here:
        int contadorDuplicatas = 0;
        ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.MetaAnn.MetaAnn", locale);

        JFileChooser fc;

        if(this.ULTIMO_DIRETORIO != null)
        fc = new JFileChooser(this.ULTIMO_DIRETORIO);
        else
        fc = new JFileChooser();

        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setFileFilter(FiltroArquivo.criaFiltro(this.locale));
        fc.setAcceptAllFileFilterUsed(false);
        fc.setMultiSelectionEnabled(true);
        fc.setApproveButtonToolTipText(bundle.getString("abrirArquivo"));
        fc.setDialogTitle(bundle.getString("adicionarCorpus"));
        fc.setLocale(locale);

        SwingUtilities.updateComponentTreeUI(fc);
        int retornoFc = fc.showDialog(this, bundle.getString("adicionar"));

        if(retornoFc==JFileChooser.APPROVE_OPTION)
        {
            //Obter os arquivos selecionados
            File[] arquivos = fc.getSelectedFiles();

            if(arquivos.length > 0)
            {
                //Memorizar o último diretório selecionado
                this.ULTIMO_DIRETORIO = new File(arquivos[0].getParent());
            }

            for(int i=0; i<arquivos.length; i++)
            {
                //Se a lista já possui o arquivo, não inserir
                if(this.CORPUS.contains(arquivos[i]))
                {
                    contadorDuplicatas++;
                }
                else
                {
                    this.CORPUS.add(arquivos[i]);
                    this.CORPUS_MODEL.add(this.CORPUS_MODEL.size(), arquivos[i].getAbsolutePath());
                }
            }

            if(contadorDuplicatas > 0)
            {
                String aviso;

                if(contadorDuplicatas==1)
                aviso = bundle.getString("avisoCorpusNaoInseridoUm");
                else
                aviso = contadorDuplicatas + " " + bundle.getString("avisoCorpusNaoInseridoVarios");

                JOptionPane.showMessageDialog(this, aviso, bundle.getString("aviso"), JOptionPane.WARNING_MESSAGE);
            }
        }

        //Código para verificar informações extras
        verificaPrimeiroArquivo();
    }//GEN-LAST:event_Botao_Adiciona_CorpusActionPerformed

    private void Botao_ConfiguracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Botao_ConfiguracaoActionPerformed

        new Localidade(this).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_Botao_ConfiguracaoActionPerformed

    private void jButton_Volta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Volta1ActionPerformed
        // TODO add your handling code here:
        
        int[] indices;
        int i, indice;
        List<String> lista = new ArrayList<String>();
        
        if(!Lista_de_Informacoes_Ferramenta_Gerada.isSelectionEmpty()){
            
            indices = Lista_de_Informacoes_Ferramenta_Gerada.getSelectedIndices();
            Arrays.sort(indices);
            for(i = (indices.length-1); i >= 0; i--)
            {
                indice = indices[i];
                lista.add(INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.get(indice));
                INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.remove(indice);
            }
            
            for(i = (lista.size() - 1); i >= 0; i--)
                INFORMACOES_EXTRA_CORPUS_MODEL.addElement(lista.get(i));
        }
        
    }//GEN-LAST:event_jButton_Volta1ActionPerformed

    private void jButton_Vai1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_Vai1ActionPerformed
        
        int[] indices;
        int i, indice;
        List<String> lista = new ArrayList<String>();
        
        if(!Lista_de_Informacoes_Corpus.isSelectionEmpty()){
            
            indices = Lista_de_Informacoes_Corpus.getSelectedIndices();
            Arrays.sort(indices);
            for(i = (indices.length-1); i >= 0; i--)
            {
                indice = indices[i];
                lista.add(INFORMACOES_EXTRA_CORPUS_MODEL.get(indice));
                INFORMACOES_EXTRA_CORPUS_MODEL.remove(indice);
            }
            
            for(i = (lista.size() - 1); i >= 0; i--)
                INFORMACOES_EXTRA_FERRAMENTA_GERADA_MODEL.addElement(lista.get(i));
        }
        
    }//GEN-LAST:event_jButton_Vai1ActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        this.Botao_CancelarActionPerformed(evt);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemEnglishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEnglishActionPerformed
        // TODO add your handling code here:
        this.locale = new Locale("en", "US");
        this.internacionaliza();
        jMenuItemEnglish.setEnabled(false);
        Lista_de_CategoriasValueChanged(null);
        jMenuItemPortugues.setEnabled(true);
    }//GEN-LAST:event_jMenuItemEnglishActionPerformed

    private void jMenuItemPortuguesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPortuguesActionPerformed
        // TODO add your handling code here:
        this.locale = new Locale("pt", "BR");
        this.internacionaliza();
        Lista_de_CategoriasValueChanged(null);
        jMenuItemPortugues.setEnabled(false);
        jMenuItemEnglish.setEnabled(true);
    }//GEN-LAST:event_jMenuItemPortuguesActionPerformed

    private void itemSobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemSobreActionPerformed
        // TODO add your handling code here:
        JFrameSobre modal = new JFrameSobre(this.locale);
        
    }//GEN-LAST:event_itemSobreActionPerformed

    private void itemManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemManualActionPerformed
        //Abrir o manual
        
        File pdf = new File("Manual do Usuario.pdf"); 

        try {  
          Desktop.getDesktop().open(pdf);  
        }
        catch (IllegalArgumentException ex)
        {
            try
            {
                String texto, titulo;
                ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.MetaAnn.MetaAnn", locale);
                
                texto = bundle.getString("erroManual");
                titulo = bundle.getString("erro");

                // for copying style
                JLabel label = new JLabel();
                Font font = label.getFont();

                // create some css from the label's font
                StringBuffer style = new StringBuffer("font-family:" + font.getFamily() + ";");
                style.append("font-weight:" + (font.isBold() ? "bold" : "normal") + ";");
                style.append("font-size:" + font.getSize() + "pt;");
                style.append("background: rgb("+label.getBackground().getRed()+","+label.getBackground().getGreen()+","+label.getBackground().getBlue()+");");

                String mensagem = "<html><body style=\"" + style + "\">" + texto + ".</body></html>";                                     
                JEditorPane je = new JEditorPane();
                je.setEditorKit(JEditorPane.createEditorKitForContentType("text/html"));
                je.setText(mensagem);
                je.setBackground(label.getBackground());
                je.setEditable(false);

                //Criar o manipulador de Hyperlink
                je.addHyperlinkListener(new HyperlinkListener() {
                    public void hyperlinkUpdate(HyperlinkEvent e) {
                        if(e.getEventType() == HyperlinkEvent.EventType.ACTIVATED) {
                            if(Desktop.isDesktopSupported()) {
                                try {
                                    Desktop.getDesktop().browse(e.getURL().toURI());
                                } catch (Exception ex3) {
                                    //Exceção disparada se a plataforma computacional não tiver navegador
                                    ex3.printStackTrace();
                                }
                            }
                        }
                    }
                });
                
                JOptionPane.showMessageDialog(null, je, titulo, JOptionPane.ERROR_MESSAGE);
            }
            catch(Exception ex2)
            {
                ex2.printStackTrace();  
                JOptionPane.showMessageDialog(null, "Erro no Desktop: " + ex2);  
            }
        }
        catch(Exception ex) {  
            ex.printStackTrace();  
            JOptionPane.showMessageDialog(null, "Erro no Desktop: " + ex);  
        }
        
    }//GEN-LAST:event_itemManualActionPerformed
	
     public boolean AdicionaCategoria(Categoria nova_categoria){
        
                
        /*
         * Adiciona uma Nova Categoria ao ArrayList Categorias e ao CATEGORIAS_MODEL
         */
         
         ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.MetaAnn.MetaAnn", locale);
        
        boolean identico = false;
        
            for(Categoria aux : CATEGORIAS){
                // Talvez seja Necessario alterações nesse metodo
                if(aux.getNome_da_Categoria().equals(nova_categoria.getNome_da_Categoria())){
                    identico = true;
                    JOptionPane.showMessageDialog(null, bundle.getString("erroAdicionaNomeCategoriaExistente"), "MetaAnn", JOptionPane.ERROR_MESSAGE);
                    break;
                }
                
                if(aux.getIdentificador_da_Categoria().equals(nova_categoria.getIdentificador_da_Categoria())){
                    identico = true;
                    JOptionPane.showMessageDialog(null, bundle.getString("erroAdicionaIdentificadorCategoriaExistente"), "MetaAnn", JOptionPane.ERROR_MESSAGE);
                    break;
                }
            }
            
        if(!identico){ 
            nova_categoria.idNum = contCategs++;
            CATEGORIAS.add(nova_categoria);
            CATEGORIAS_MODEL.addElement(nova_categoria.getNome_da_Categoria());
        }
        
        return !identico;
    }
    
     public boolean EditaCategoria(Categoria temp, Categoria categoria_editada){
        /*
         *  Salva as Modificações feitas na Categoria para o ArrayList
         * 
         */
        
         ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.MetaAnn.MetaAnn", locale);
         
        boolean identico = false;
        
            for(Categoria aux : CATEGORIAS){
                // Talvez seja Necessario alterações nesse metodo
                if(aux.getNome_da_Categoria().equals(temp.getNome_da_Categoria()) && aux != categoria_editada){
                    identico = true;
                    JOptionPane.showMessageDialog(null, bundle.getString("erroEditaNomeCategoriaExistente"), "MetaAnn", JOptionPane.ERROR_MESSAGE);
                    break;
                }
                
                if(aux.getIdentificador_da_Categoria().equals(temp.getIdentificador_da_Categoria()) && aux != categoria_editada){
                    identico = true;
                    JOptionPane.showMessageDialog(null, bundle.getString("erroEditaIdentificadorCategoriaExistente"), "MetaAnn", JOptionPane.ERROR_MESSAGE);
                    break;
                }
                
               
            }
        
        if(!identico){
            int indice = Lista_de_Categorias.getSelectedIndex();
            temp.idNum = CATEGORIAS.get(indice).idNum;
            CATEGORIAS.remove(indice);
            CATEGORIAS.add(indice, temp);
            
            //Alterar em todas as dependências
            for(Categoria cat : CATEGORIAS)
            {
                for(int i = 0; i < cat.getDependencias().size(); i++)
                    if(cat.getDependencias().get(i).idNum==temp.idNum)
                        cat.getDependencias().set(i, temp);
            }
            
            Lista_Opcoes_da_Categoria.setSelectedIndex(indice);
            CATEGORIAS_MODEL.setElementAt(temp.getNome_da_Categoria(), indice);
            Lista_de_CategoriasValueChanged(null);
        }
        
        return !identico;
    }

     private void verificaPrimeiroArquivo()
     {
         String primeiroArquivo = "";
         
         if(this.CORPUS_MODEL.size()>0)
             primeiroArquivo = CORPUS_MODEL.firstElement();
         
         if(!primeiroArquivo.equals(PRIMEIRO_ARQUIVO))
         {
             carregaExtra();
             PRIMEIRO_ARQUIVO = primeiroArquivo;
         }
     }
     
private void carregaExtra(){
        Parser parser = null;
        
        INFORMACOES_EXTRAS.clear();
        INFORMACOES_EXTRA_CORPUS_MODEL.clear();
        
        //Considerar o primeiro arquivo da lista
        if(this.CORPUS_MODEL.size()>0)
        {
            File file = new File(this.CORPUS_MODEL.firstElement());

            if(!file.exists()){
                //Simplesmente não carrega nada
                return;
            }

            parser = new Parser(file.getAbsolutePath());

            parser.executeCorpusDocument();

            for(String aux : parser.getInfo().keySet()){
                String informacao = aux.replace('-', '_').toUpperCase();
                INFORMACOES_EXTRAS.put(informacao, informacao);
                INFORMACOES_EXTRA_CORPUS_MODEL.addElement(informacao);
            }
        }
        
        jMenuItemPortugues.setEnabled(false);
    }
    
    private void iniciaClasse(BufferedWriter escritor , String classe){
        
          /*
           *  Escreve as definições de classe de acordo com o padrão java
          */
        
        try {
           
            
            String texto = "public class " + classe + " {";
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
           
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void iniciaClasseHeranca(BufferedWriter escritor , String classe, String classe_mae){
        
          /*
           *  Escreve as definições de classe de acordo com o padrão java
          */
        
        try {
           
            
            String texto = "public class " + classe + " extends " + classe_mae + " {";
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
           
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
   private void finalizaClasse(BufferedWriter escritor){
       
        /*
         *  Fecha a Classe
         */
        
        try {
            escritor.newLine();
            
            escritor.write("}");
            
            escritor.flush();
            
        } catch (IOException ex) {
            
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        
        }
        
    }
    
        private void criaPackage(BufferedWriter escritor, String valor){
        
        /*
         * Escreve a definição de package de acordo com o padrão java
         */
            
           try {
            
             String texto = "package " + PROJETO.getName() + "." + valor + " ;";
            
             escritor.write(texto);
            
             escritor.newLine();
            
             escritor.newLine();
            
             escritor.flush();
           
            } catch (IOException ex) {
                Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    
        private void criaImport(BufferedWriter escritor , String valor){
        
          /*
           *  Escreve as definições  de importação de acordo com o padrão java
          */
        
        try {
           
            
            String texto = "import " + valor + " ;";
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
           
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
   private void criaArquivoJava(String classe){
        
        /*
         *  Realiza a Abertura do File , que serÃ¡ utilizado pelo BufferWriter
         *  Modifica o Conteudo de "bw"
         */
        
        if(!DIRETORIO.isDirectory()) DIRETORIO.mkdir();
        
        try {
           
            bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(new File(DIRETORIO,classe + ".java")),"UTF-8"));  
        
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    private void criaVariavelString(BufferedWriter escritor,String variavel){
        
        /*
         *  Cria as Variaveis global no arquivo armazenado em escritor
         */
        
        String texto = "\tprivate String " + variavel + " = \"\";";
        try {
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void criaVariavelFile(BufferedWriter escritor,String variavel){
        
        /*
         *  Cria as Variaveis global no arquivo armazenado em escritor
         */
        
        String texto = "\tpublic File " + variavel + " = null;";
        try {
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void criaVariavelBoolean(BufferedWriter escritor,String variavel){
        /*
         * Cria Variavel Boolean
         */
        
        String texto = "\tprivate boolean " + variavel + " ;";
       
        try {
            
            escritor.write(texto);
            
            bw.newLine();
        
            bw.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
   
    }
    
     private void criaVariavelArrayList(BufferedWriter escritor,String variavel, String tipo){
        
        /*
         *  Cria as Variaveis global no arquivo armazenado em escritor
         */
        
        String texto = "\tprivate ArrayList<" + tipo +">" + variavel + " ;";
        try {
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
      
    
    private void pulaLinha(BufferedWriter escritor){
       
        /*
         *  Pula linha no Arquivo encapsulado no escritor
         */
        
        try {
           
            escritor.newLine();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void criaGetString(BufferedWriter escritor,String variavel){
        
        /*
         * Gera o metodo get para a Variavel em questão 
         */
        
        try {
            
            String texto = "\tpublic String get" + variavel + "(){\n"
                    + "\t\treturn this." + variavel + " ;\n"
                    + "\t}";
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void criaGetIdNum(BufferedWriter escritor)
    {
        
        /*
         * Gera o metodo get para o Id do segmento 
         */
        
        try {
            
            String texto = "\tpublic String getIDNum(){\n"
                    + "\t\treturn Integer.valueOf(this.ID).toString();\n"
                    + "\t}";
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void criaGetBoolean(BufferedWriter escritor,String variavel){
        
        /*
         * Gera o metodo get para a Variavel em questão 
         */
        
        try {
            
            String texto = "\tpublic boolean get" + variavel + "(){\n"
                    + "\t\treturn this." + variavel + " ;\n"
                    + "\t}";
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
        private void criaGetArrayList(BufferedWriter escritor,String variavel,String tipo){
        
        /*
         * Gera o metodo get para a Variavel em questão 
         */
        
        try {
            
            String texto = "\tpublic ArrayList<" + tipo +"> get" + variavel + "(){\n"
                    + "\t\treturn this." + variavel + " ;\n"
                    + "\t}";
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void criaSetString(BufferedWriter escritor,String variavel){
     
            /*
             *  Gera o metodo Set para a Variavel
             */
            
            String texto = "\tpublic void set" + variavel + "(String " + variavel + " ){\n"
                    + "\t\t this." + variavel + " = " + variavel + " ;\n"
                    + "\t}";
        
        try {
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void criaSetBoolean(BufferedWriter escritor,String variavel){
    
            /*
             *  Gera o metodo Set para a Variavel
             */
            
            String texto = "\tpublic void set" + variavel + "(boolean " + variavel + " ){\n"
                    + "\t\t this." + variavel + " = " + variavel + " ;\n"
                    + "\t}";
        
        try {
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
        private void criaSetArrayList(BufferedWriter escritor,String variavel,String tipo){
     
            /*
             *  Gera o metodo Set para a Variavel
             */
            
            String texto = "\tpublic void set" + variavel + "(ArrayList<"+ tipo + "> " + variavel + " ){\n"
                    + "\t\t this." + variavel + " = " + variavel + " ;\n"
                    + "\t}";
        
        try {
            
            escritor.write(texto);
            
            escritor.newLine();
            
            escritor.newLine();
            
            escritor.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
   private void constroiDocument(){
        
        /*
         *  Constroi a classe Document
         */
        
        criaArquivoJava("Document");
        criaPackage(bw, "source");
        iniciaClasse(bw,"Document");
        
        String construtor = "\tpublic Document(String MENSAGEM,String ID){\n"
                + "\t\tthis.MENSAGEM = MENSAGEM ;\n"
                + "\t\tswitch(ID.length()){\n"
                + "\t\t\tcase 1 : ID = \"000\" + ID; break;\n"
                + "\t\t\tcase 2 : ID = \"00\" + ID; break;\n"
                + "\t\t\tcase 3 : ID = \"0\" + ID; break;\n"
                + "\t\t}\n"
                + "\t\tthis.ID = ID;\n"
                + "\t}";
        try {
            
            bw.write(construtor);
            
            pulaLinha(bw);
            
            bw.flush();
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        ArrayList<String> VARIAVEISPADRAO = new ArrayList<String>();
        
        VARIAVEISPADRAO.add("MENSAGEM");
        VARIAVEISPADRAO.add("ID");
        VARIAVEISPADRAO.add("FAKE_ID");
        
        for(String aux : VARIAVEISPADRAO)
            criaVariavelString(bw, aux);
        
        for(Categoria aux : CATEGORIAS){
            criaVariavelString(bw,aux.getIdentificador_da_Categoria());
        }
        
        for(Categoria aux : CATEGORIAS){
            criaVariavelBoolean(bw, "CATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO");
        }
        
        criaVariavelBoolean(bw, "COMPLETO");
                
        pulaLinha(bw);
        pulaLinha(bw);
        
        
        for(String aux : VARIAVEISPADRAO)
            criaGetString(bw, aux);
        
        criaGetIdNum(bw);
        
        for(Categoria aux : CATEGORIAS){
            criaGetString(bw, aux.getIdentificador_da_Categoria());
        }
        
        for(Categoria aux : CATEGORIAS){
            criaGetBoolean(bw, "CATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO" );
        }
        
        criaGetBoolean(bw, "COMPLETO"); // MUDAR DEPOIS
        
        for(String aux : VARIAVEISPADRAO)
            criaSetString(bw, aux);
        
        for(Categoria aux : CATEGORIAS){
            criaSetString(bw, aux.getIdentificador_da_Categoria());
        }
        
        for(Categoria aux : CATEGORIAS){
            criaSetBoolean(bw, "CATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO" );
        }
        
        criaSetBoolean(bw, "COMPLETO"); // MUDAR DEPOIS
        
        finalizaClasse(bw);
        
    }
    
    private void constroiAviso(Locale ferramentaLocale, String nomeProjeto){
        criaArquivoJava("Aviso");
        criaPackage(bw, "source");
        criaImport(bw,"java.util.ArrayList");
        criaImport(bw,"javax.swing.JOptionPane");
        criaImport(bw,"javax.swing.UIManager");
        iniciaClasseHeranca(bw, "Aviso","javax.swing.JFrame");
        
        ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.Ferramenta.Aviso.Aviso", ferramentaLocale);
        
        pulaLinha(bw);
        
        String texto = "";
        
                /*
                 * Variaveis Globais Aviso
                 */
        
        texto  += "\tprivate ArrayList lista;\n"
                + "private Main janela;\n\n"
                
                /*
                 * Construtor default Aviso
                 */
                
                + "\tpublic Aviso() {\n"
                + "\t\tinitComponents();\n"
                + "\t}\n\n"
                
                /*
                 * Construtor Composto Aviso
                 */
                
                + "\tpublic Aviso(ArrayList x, Main janela){\n"
                + "\t\tinitComponents();\n"
                + "\t\tlista = x;\n"
                + "\t\tthis.janela = janela;\n"
                + "\t\tinicia();\n"
                + "\t}\n\n"
                
                /*
                 * Método Inicia
                 */
                
                + "\tpublic void inicia(){\n"
                + "\t\tString conteudo = \"\";\n\n"
                + "\t\tfor(Object aux : lista){\n"
                + "\t\t\tArrayList<Document> documentos = ((PlainDocument)aux).getDOCUMENTS();\n"
                + "\t\t\tfor(Document aux2 : documentos ){\n"
                + "\t\t\t\tif(!aux2.getCOMPLETO()) conteudo += aux2.getFAKE_ID() + \"\\n\";"
                + "\t\t\t}\n"
                + "\t\t}\n\n"
                
                + "\t\tDisplay.setText(conteudo);\n"
                + "\t\tDisplay.getCaret().moveDot(0);\n"
                + "\t\tif(Display.getText().equals(\"\")) BsairActionPerformed(null);\n"
                + "\t}\n\n"
                
                /*
                 * Metodo initComponents 
                 */
                
                + "\tprivate void initComponents() {\n\n"
                + "\t\tjPanel1 = new javax.swing.JPanel();\n"
                + "\t\tjLabel1 = new javax.swing.JLabel();\n"
                + "\t\tjLabel2 = new javax.swing.JLabel();\n"
                + "\t\tBsair = new javax.swing.JButton();\n"
                + "\t\tBvoltar = new javax.swing.JButton();\n"
                + "\t\tjScrollPane2 = new javax.swing.JScrollPane();\n"
                + "\t\tDisplay = new javax.swing.JTextPane();\n\n"
                
                + "\t\tsetDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);\n"
                + "\t\tsetTitle(\"" + bundle.getString("atencao") + "\");\n"
                + "\t\tsetResizable(false);\n"
                + "\t\taddWindowListener(new java.awt.event.WindowAdapter() {\n"
                + "\t\t\tpublic void windowClosing(java.awt.event.WindowEvent evt) {\n"
                + "\t\t\t\tformWindowClosing(evt);\n"
                + "\t\t\t}\n"
                + "\t\t});\n\n"
                
                + "\t\tjPanel1.setAutoscrolls(true);\n\n"
                
                + "\t\tjLabel1.setFont(new java.awt.Font(\"Tahoma\", 0, 12));\n"
                + "\t\tjLabel1.setText(\"" + bundle.getString("mensagem1") +"\");\n\n"
                
                + "\t\tjLabel2.setFont(new java.awt.Font(\"Tahoma\", 0, 12));\n"
                + "\t\tjLabel2.setText(\""+ bundle.getString("mensagem2") + "\");\n\n"
                
                + "\t\tBsair.setText(\"" + bundle.getString("sair") + " \");\n"
                + "\t\tBsair.addActionListener(new java.awt.event.ActionListener() {\n"
                + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                + "\t\t\t\tBsairActionPerformed(evt);\n"
                + "\t\t\t}\n"
                + "\t\t});\n\n"
                
                + "\t\tBvoltar.setText(\"" + bundle.getString("voltar") + "\");\n"
                + "\t\tBvoltar.addActionListener(new java.awt.event.ActionListener() {\n"
                + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                + "\t\t\t\tBvoltarActionPerformed(evt);\n"
                + "\t\t\t}\n"
                + "\t\t});\n\n"
                
                + "\t\tDisplay.setEditable(false);\n"
                + "\t\tDisplay.setFocusable(false);\n"
                + "\t\tjScrollPane2.setViewportView(Display);\n\n"
                
                + "\t\tjavax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n"
                + "\t\tjPanel1.setLayout(jPanel1Layout);\n"
                + "\t\tjPanel1Layout.setHorizontalGroup(\n"
                + "\t\t\tjPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                + "\t\t\t.addGroup(jPanel1Layout.createSequentialGroup()\n"
                + "\t\t\t\t.addContainerGap()\n"
                + "\t\t\t\t.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                + "\t\t\t\t\t.addGroup(jPanel1Layout.createSequentialGroup()\n"
                + "\t\t\t\t\t\t.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                + "\t\t\t\t\t\t\t.addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                + "\t\t\t\t\t\t\t.addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)\n"
                + "\t\t\t\t\t\t\t.addComponent(jScrollPane2))\n"
                + "\t\t\t\t\t\t.addContainerGap())\n"
                + "\t\t\t\t\t.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()\n"
                + "\t\t\t\t\t\t.addGap(0, 0, Short.MAX_VALUE)\n"
                + "\t\t\t\t\t\t.addComponent(Bsair, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                + "\t\t\t\t\t\t.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n"
                + "\t\t\t\t\t\t.addComponent(Bvoltar)\n"
                + "\t\t\t\t\t\t.addGap(11, 11, 11))))\n"
                + "\t\t);\n\n"
                
                + "\t\tjPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {Bsair, Bvoltar});\n\n"
                
                + "\t\tjPanel1Layout.setVerticalGroup(\n"
                + "\t\t\tjPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                + "\t\t\t.addGroup(jPanel1Layout.createSequentialGroup()\n"
                + "\t\t\t\t.addGap(10, 10, 10)\n"
                + "\t\t\t\t.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                + "\t\t\t\t.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n"
                + "\t\t\t\t.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                + "\t\t\t\t.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n"
                + "\t\t\t\t.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                + "\t\t\t\t.addGap(11, 11, 11)\n"
                + "\t\t\t\t.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n"
                + "\t\t\t\t\t.addComponent(Bsair)\n"
                + "\t\t\t\t\t.addComponent(Bvoltar))\n"
                + "\t\t\t\t.addContainerGap(13, Short.MAX_VALUE))\n"
                + "\t\t);\n\n"
                
                + "\t\tjPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Bsair, Bvoltar});\n\n"
                
                + "\t\tjavax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n"
                + "\t\tgetContentPane().setLayout(layout);\n"
                + "\t\tlayout.setHorizontalGroup(\n"
                + "\t\t\tlayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                + "\t\t\t.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                + "\t\t);\n"
                + "\t\tlayout.setVerticalGroup(\n"
                + "\t\t\tlayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                + "\t\t\t.addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                + "\t\t\t);\n\n"
                
                + "\t\tpack();\n"
                + "\t}\n\n"
                
                
                /*
                 *  ActionPerformed Botão Voltar (BVoltar)
                 */
                
                + "\tprivate void BvoltarActionPerformed(java.awt.event.ActionEvent evt) {\n"
                + "\t\tjanela.setEnabled(true);\n"
                + "\t\tthis.dispose();\n"
                + "\t}\n\n"
                
                /*
                 *  ActionPerformed Botão Sair (BSair)
                 */
               
                + "\tprivate void BsairActionPerformed(java.awt.event.ActionEvent evt) {\n" 
                + "\t\tif(!janela.isSaved)\n" 
                + "\t\t{\n" 
                + "\n" 
                + "\t\t\tUIManager.put(\"OptionPane.yesButtonText\", \""+bundle.getString("salvarEsair")+"\");\n" 
                + "\t\t\tUIManager.put(\"OptionPane.noButtonText\", \""+bundle.getString("SairSemSalvar")+"\");\n" 
                + "\n" 
                + "\t\t\tint saida = JOptionPane.showConfirmDialog(this, \""+bundle.getString("naoSalvo")+"\", \""+nomeProjeto+" "+bundle.getString("salvoSucessoTitulo")+"\", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);\n" 
                + "\n" 
                + "\t\t\tswitch(saida)\n" 
                + "\t\t\t{\n" 
                + "\t\t\t\tcase JOptionPane.YES_OPTION:\n" 
                + "\t\t\t\t\tsalvarArquivo();\n" 
                + "\t\t\t\t\tSystem.exit(-1);\n" 
                + "\t\t\t\t\tbreak;\n" 
                + "\n" 
                + "\t\t\t\tcase JOptionPane.NO_OPTION:\n" 
                + "\t\t\t\t\tSystem.exit(-1);\n" 
                + "\t\t\t\t\tbreak;\n" 
                + "\n" 
                + "\t\t\t\tcase JOptionPane.CANCEL_OPTION:\n" 
                + "\t\t\t\t\tBvoltarActionPerformed(evt);\n" 
                + "\t\t\t\t\tbreak;\n" 
                + "\t\t\t}\n" 
                + "\t\t}\n" 
                + "\t\telse\n" 
                + "\t\t{\n" 
                + "\t\t\tSystem.exit(-1);\n" 
                + "\t\t}\n"
                + "\t}\n\n"
                
                /*
                 * Método salvarArquivo
                 */
                
                + "\tprivate void salvarArquivo()\n" 
                + "\t{\n" 
                + "\t\t//Salvar no arquivo de texto\n" 
                + "\t\tArquivo.criaResp(lista);\n" 
                + "\t\t\n" 
                + "\t\tjanela.isSaved = true;\n" 
                + "\t}"
                
                /*
                 *  ActionPerformed WindowClosing
                 */
                
                + "\tprivate void formWindowClosing(java.awt.event.WindowEvent evt) {\n"
                + "\t\tjanela.setEnabled(true);\n\n"
                + "\t}\n\n"
                
                /*
                 *  Elementos Interface Gráfica
                 */
                
                + "\tprivate javax.swing.JButton Bsair;\n"
                + "\tprivate javax.swing.JButton Bvoltar;\n"
                + "\tprivate javax.swing.JTextPane Display;\n"
                + "\tprivate javax.swing.JLabel jLabel1;\n"
                + "\tprivate javax.swing.JLabel jLabel2;\n"
                + "\tprivate javax.swing.JPanel jPanel1;\n"
                + "\tprivate javax.swing.JScrollPane jScrollPane2;\n\n";
        
        try {             
            bw.write(texto);
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        finalizaClasse(bw);      
        
    }
    
    private void constroiPlainDocument(TreeMap <String,String> extras){
        
            criaArquivoJava("PlainDocument");
            criaPackage(bw, "source");
            criaImport(bw,"java.util.ArrayList");
            criaImport(bw,"java.io.File");
            iniciaClasse(bw, "PlainDocument implements Comparable<PlainDocument>");
            
            pulaLinha(bw);
            /*
             * Declara as Variaveis String Padrão que seram utilizadas
             */
            ArrayList<String> variaveisPadraoString = new ArrayList<String>();
                variaveisPadraoString.add("PONTODEVISTA");
                variaveisPadraoString.add("TEXTO");
                variaveisPadraoString.add("IDARQUIVO");
                variaveisPadraoString.add("IDSEG");
                variaveisPadraoString.add("IDANNOTATOR");
                variaveisPadraoString.add("CODIGO");
           
            variaveisPadraoString.addAll(extras.values());
                
            for(String aux : variaveisPadraoString){
                criaVariavelString(bw, aux);
            }
            criaVariavelArrayList(bw, "DOCUMENTS", "Document");
            criaVariavelFile(bw, "ARQUIVO");
            
            pulaLinha(bw);
            
            /*
             * Cria o construtor
             */
            // Possivel BUG em Arquivo
            String construtor = "\tpublic PlainDocument(String TEXTO, String VIEW,String ANNOTATOR,String CODIGO,int INDEX, File ARQUIVO){\n"
                    + "\t\tthis.TEXTO = TEXTO ;\n"
                    + "\t\tthis.IDARQUIVO = \"\" ;\n"
                    + "\t\tthis.IDSEG = \"\" ;\n"
                    + "\t\tthis.IDANNOTATOR = ANNOTATOR ;\n"
                    + "\t\tthis.CODIGO = CODIGO ;\n" 
                    + "\t\tthis.ARQUIVO = ARQUIVO;\n"
                    + "\t\tDOCUMENTS = Arquivo.AbreDocuments2(INDEX,this) ;\n"
                    + "\t\tArquivo.carregaResp(this) ;\n"
                    + "\t}\n\n";
        try {            
            bw.write(construtor);
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            for(String aux : variaveisPadraoString){
                criaGetString(bw, aux);
            }
            criaGetArrayList(bw, "DOCUMENTS", "Document");
            
            for(String aux : variaveisPadraoString){
                criaSetString(bw, aux);
            }
            criaSetArrayList(bw, "DOCUMENTS", "Document");
            
            /*
             * Cria os métodos de PlainDocument
             */
            
            String texto;
            try {
                texto = "\tpublic int setFakeID(int fakeID){\n"
                      + "\t\tfor(Document aux : DOCUMENTS){\n"
                      + "\t\t\taux.setFAKE_ID(fakeID + \"\");\n"
                      + "System.out.println(fakeID);"
                      + "\t\t\tfakeID++;\n"
                      + "\t\t}\n"
                      + "\t\treturn fakeID;\n"
                      + "\t}";
                
                bw.write(texto);
                bw.newLine();
                bw.newLine();
                
                
                texto = "\tpublic Document next(int i){\n"
                    + "\t\tif(i < DOCUMENTS.size() && i >= 0){ return DOCUMENTS.get(i);}\n"
                    + "\t\treturn null;\n"
                    + "\t} ";
            
                bw.write(texto);
                bw.newLine();
                bw.newLine();
            
                texto = "\tpublic Document ult(){\n"
                    + "\t\treturn DOCUMENTS.get(DOCUMENTS.size()-1);"
                    + "\t}";
            
                bw.write(texto);
                bw.newLine();
                bw.newLine();
            
                texto = "\tpublic Document first(){\n"
                    + "\t\treturn DOCUMENTS.get(0);\n"
                    + "\t}";
            
                bw.write(texto);
                bw.newLine();
                bw.newLine();
                
                texto = "\tpublic int compareTo(PlainDocument another){\n"
                    + "\t\treturn this.IDARQUIVO.compareTo(another.getIDARQUIVO());\n"
                    + "\t}";
            
                bw.write(texto);
                bw.newLine();
                bw.newLine();
            
                finalizaClasse(bw);
                bw.flush();
            } catch (IOException ex) {
                Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
          }
    }
    
    private void constroiArquivo(TreeMap <String,String> extra){
        
        criaArquivoJava("Arquivo");
        criaPackage(bw, "source");
        criaImport(bw, "common.*");
        criaImport(bw, "java.io.*");
        criaImport(bw, "java.util.*");
        criaImport(bw, "org.jdom2.*");
        criaImport(bw, "org.jdom2.input.*");
        criaImport(bw, "org.jdom2.output.*");
        criaImport(bw, "java.util.HashMap");
        criaImport(bw, "java.util.List");
        criaImport(bw, "java.util.Collections");
        
        iniciaClasse(bw, "Arquivo");
        
        String texto = "";
        
        /*
         *  Cria os HashMap responsáveis para mapear o valor visível ao usuário e o valor da Anotação 
         */
        
        for(Categoria aux : CATEGORIAS){
            if(aux.getTipo_da_Categoria() != 2){
                texto += "\tprivate static HashMap<String,String> hashEntrada" + aux.getIdentificador_da_Categoria() + " = new HashMap<String,String>();\n"
                       + "\tprivate static HashMap<String,String> hashSaida" + aux.getIdentificador_da_Categoria() + "= new HashMap<String,String>();\n";
            }
        }
        
        texto += "\n\tstatic{\n";
        
        for(Categoria aux: CATEGORIAS){
            if(aux.getTipo_da_Categoria() != 2){
                texto += "\t\thashEntrada" + aux.getIdentificador_da_Categoria() + ".put(\"\",\"\");\n"
                       + "\t\thashSaida" + aux.getIdentificador_da_Categoria() + ".put(\"\",\"\");\n";
                for(Opcao temp : aux.getOpcoes()){
                    texto += "\t\thashEntrada" + aux.getIdentificador_da_Categoria() + ".put(\"" + temp.getValorAnotacao() + "\",\"" + temp.getValorUsuario() + "\");\n"
                           + "\t\thashSaida" + aux.getIdentificador_da_Categoria() + ".put(\"" + temp.getValorUsuario() + "\",\"" + temp.getValorAnotacao() + "\");\n"; 
                }
            }
        }
        
        texto += "\n\t}\n\n";
       
        //Método AbreArquivo2
        texto += "\tpublic static ArrayList abreArquivo2(String annotator){\n"
                + "\t\tArrayList<PlainDocument> retorno = new ArrayList<PlainDocument>();\n"
                + "\t\tArrayList<File> arquivos = new ArrayList<File>();\n" 
                + "\t\tString view = \"\";\n" 
                + "\t\t\n" 
                + "\t\t//Obter arquivo com a sequência\n" 
                + "\t\tFile sequencia = new File(\"dados/sequencia.conf\");\n"
                + "\t\ttry{\n" 
                + "\t\t\tBufferedReader bw = new BufferedReader(new FileReader(sequencia));\n" 
                + "\t\t\tString arquivo;\n" 
                + "\t\t\twhile((arquivo = bw.readLine()) != null){\n" 
                + "\t\t\t\tarquivos.add(new File(\"dados/\" + arquivo));\n" 
                + "\t\t\t}\n" 
                + "\t\t\tbw.close();\n" 
                + "\t\t}catch(IOException e){\n" 
                + "\t\t\te.printStackTrace();\n" 
                + "\t\t}"
                + "\t\t\n" 
                + "\t\t//Passar por cada arquivo gerando um PlainDocument\n" 
                + "\t\tint i = 1;\n" 
                + "\t\tint fakeID = 1;\n"
                + "\t\tString IdArquivo = \"\";" 
                + "\t\tfor(File arqCorrente : arquivos)\n" 
                + "\t\t{\n" 
                + "\t\t\tif(arqCorrente.exists())\n" 
                + "\t\t\t{\n" 
                + "\t\t\t\tParser parser = new Parser(arqCorrente.getAbsolutePath());\n" 
                + "\t\t\t\tparser.executeCorpusDocument();\n" 
                + "\t\t\t\tString oracao = parser.getTexto();\n"
                + "\t\t\t\tIdArquivo = String.format(\"%04d\", i);\n" 
                + "\t\t\t\tPlainDocument temp = new PlainDocument(oracao, view, annotator, IdArquivo, i, arqCorrente);\n" 
                + "\t\t\t\tfor(String x : parser.getInfo().keySet()){\n"
                + "\t\t\t\t\t String aux = x.replace('-', '_').toUpperCase();\n";
        
                /*
                 *  Obtem as Variaveis Extras do Corpus, que serão utilizadas
                 */
        
                for(String variavelExtra : extra.values()){
                    texto  += "\t\t\t\t\tif(aux.equals(\"" + variavelExtra + "\")){\n"
                            + "\t\t\t\t\t\ttemp.set" + variavelExtra + "(parser.getEspecificInfo(x).toUpperCase());\n"
                            + "\t\t\t\t\t\tcontinue;\n"
                            + "\t\t\t\t\t}\n";
                }
        
          texto += "\t\t\t\t}\n"
                + "\t\t\t\n" 
                + "\t\t\t\tfakeID = temp.setFakeID(fakeID);\n" 
                + "\t\t\t\t\n" 
                + "\t\t\t\tretorno.add(temp);\n" 
                + "\t\t\t}\n" 
                + "\t\t\ti++;\n" 
                + "\t\t}\n" 
                + "\t\t\n" 
                + "\t\treturn retorno;\n"
                + "\t}\n\n";
        
        texto  += "\tpublic static ArrayList abreArquivo(String annotator){\n"
                + "\t\tboolean controle = true;\n"
                + "\t\tArrayList<PlainDocument> lista = new ArrayList<PlainDocument>();\n"
                + "\t\tString caminho = \"\";\n"
               // + "\t\torg.jdom2.Document document = null;\n"
               // + "\t\tSAXBuilder builder = new SAXBuilder();\n"
                + "\t\tParser parser = null;\n"
                + "\t\tString view = \"\";\n" // tem q tirar isso 
                + "\t\tString IDArquivo = \"\";\n"
                + "\t\tFile file = null;\n"
                + "\t\tint i = 1;\n"
                + "\t\tint j = 1;\n"
                + "\t\tint count = 0;\n"
                + "\t\t\twhile(true){\n"
                //+ "\t\t\t\tif(j>30)j=1;\n"
                + "\t\t\t\tif(i<10)caminho = \"config/Corpus/src_R000\" + i + \"_C1_a\";\n"
                + "\t\t\t\telse if(i<100)caminho = \"config/Corpus/src_R00\" + i + \"_C1_a\";\n"
                + "\t\t\t\telse if(i<1000)caminho = \"config/Corpus/src_R0\" + i + \"_C1_a\";\n\n"
                + "\t\t\t\telse caminho = \"config/Corpus/src_R\" + i + \"_C1_a\";\n\n"
                
                + "\t\t\t\tif(j<10) caminho += \"000\" + j + \".xml\";\n"
                + "\t\t\t\telse if(j<100) caminho += \"00\" + j + \".xml\";\n"
                + "\t\t\t\telse if(j<1000) caminho += \"0\" + j + \".xml\";\n"
                + "\t\t\t\telse caminho += \"\" + j + \".xml\";\n\n"
                
                + "\t\t\t\tIDArquivo = \"\";\n"
                + "\t\t\t\tcount++;\n\n"
                
                + "\t\t\t\tif(count < 10)IDArquivo += \"000\" + count;\n"
                + "\t\t\t\telse if (count <100) IDArquivo += \"00\" + count;\n"
                + "\t\t\t\telse if(count<1000) IDArquivo += \"0\" + count;\n"
                + "\t\t\t\telse IDArquivo += count;\n\n"
                
                + "\t\t\t\tfile = new File(caminho);\n"
                + "\t\t\t\tif(!file.exists())break;\n"
               // + "\t\t\t\ttry{\n
                + "\t\t\t\tparser = new Parser(caminho);\n"
                + "\t\t\t\tparser.executeCorpus();"
               // + "\t\t\t\t}catch(Exception e){\n"
                //+ "\t\t\t\t\te.printStackTrace();\n"
                //+ "\t\t\t\t}\n\n"
                
                //+ "\t\t\t\tElement root = document.getRootElement();\n"
                + "\t\t\t\tString oracao = parser.getTexto();\n"
                //+ "\t\t\t\toracao = oracao.substring(5,oracao.length()-3);\n\n"
                
                + "\t\t\t\tPlainDocument temp = new PlainDocument(oracao,view,annotator,IDArquivo,i,null);\n"
                
                //+ "\t\t\t\tList<Element> children = root.getChildren(\"info\");\n"
                + "\t\t\t\t\tfor(String x : parser.getInfo().keySet()){\n"
                + "\t\t\t\t\t\t String aux = x.replace('-', '_').toUpperCase();\n";
        
                /*
                 *  Obtem as Variaveis Extras do Corpus, que serão utilizadas
                 */
        
                for(String variavelExtra : extra.values()){
                    texto  += "\t\t\t\t\t\tif(aux.equals(\"" + variavelExtra + "\")){\n"
                            + "\t\t\t\t\t\t\ttemp.set" + variavelExtra + "(parser.getEspecificInfo(x).toUpperCase());\n"
                            + "\t\t\t\t\t\t\tcontinue;\n"
                            + "\t\t\t\t\t\t}\n";
                }
        
          texto += "\t\t\t\t\t}\n"
                + "\t\t\t\tlista.add(temp);\n\n"
                
                + "\t\t\t\ti++;\n"
                + "\t\t\t\tj++;\n"
                + "\t\t\t}\n\n"
                
                  /*
                   * Define a Ordem Randomica
                   */
                 + "\t\t\tArrayList<PlainDocument> randomList = new ArrayList<PlainDocument>();\n" 
                 + "\t\tfile = new File(\"config/sequencia.txt\");\n\n"
                 + "\t\t\tint fakeID = 1;\n"
                 + "\t\tif(!file.exists()){\n" 
                 + "\t\t\tboolean[] controleR = new boolean[lista.size()];\n"
                 + "\t\t\tint    [] ordemGerada = new int[lista.size()];\n"
                 + "\t\t\tRandom gerador = new Random();\n\n"
                 + "\t\t\tfor( i = 0; i< lista.size();i++){\n"
                 + "\t\t\t\tint randomIndex = gerador.nextInt(lista.size());\n"
                 + "\t\t\t\tif(!controleR[randomIndex]){\n"
                 + "\t\t\t\t\tordemGerada[i] = randomIndex;\n"
                 + "\t\t\t\t\tfakeID = lista.get(randomIndex).setFakeID(fakeID);\n" 
                 + "\t\t\t\t\trandomList.add(lista.get(randomIndex));\n"
                 + "\t\t\t\t\tcontroleR[randomIndex] = true;\n"
                 + "\t\t\t\t}\n"
                 + "\t\t\t\telse{\n"
                 + "\t\t\t\t\twhile(controleR[randomIndex]){\n"
                 + "\t\t\t\t\t\trandomIndex++;\n"
                 + "\t\t\t\t\t\tif(randomIndex == lista.size()) randomIndex = 0;\n"
                 + "\t\t\t\t\t}\n"
                 + "\t\t\t\t\tordemGerada[i] = randomIndex;\n"
                 + "\t\t\t\t\trandomList.add(lista.get(randomIndex));\n"
                 + "\t\t\t\t\tfakeID = lista.get(randomIndex).setFakeID(fakeID);\n"
                 + "\t\t\t\t\tcontroleR[randomIndex] = true;\n"
                 + "\t\t\t\t}\n"
                 + "\t\t\t}\n\n"  
                 
                 +"\t\t\tString sequencia = \"\";\n\n"
                  
                 +"\t\t\tfor(int aux : ordemGerada){\n" 
                 +"\t\t\t\tsequencia += aux + \"\\n\";"
                 +"\t\t\t}\n"
                  
                 +"\t\t\ttry{\n"
                 +"\t\t\t\tBufferedWriter bw = new BufferedWriter(new FileWriter(\"config/sequencia.txt\"));\n"
                 +"\t\t\t\tbw.write(sequencia.substring(0,sequencia.length()-1));\n"
                 +"\t\t\t\tbw.flush();\n"
                 +"\t\t\t\tbw.close();\n"
                 +"\t\t\t}catch(IOException e){\n"
                 +"\t\t\t\te.printStackTrace();\n"
                 +"\t\t\t}\n"
                 +"\t\t}\n"
                  
                 +"\t\telse{\n"
                 +"\t\t\ttry{\n"
                 +"\t\t\t\tBufferedReader bw = new BufferedReader(new FileReader(file));\n"
                 +"\t\t\t\tString indice;\n"
                 +"\t\t\t\twhile((indice = bw.readLine()) != null){\n"
                 +"\t\t\t\t\tint index = Integer.parseInt(indice);\n"
                 //+"\t\t\t\t\tSystem.out.printf(index + \" \");\n"
                 +"\t\t\t\t\tfakeID = lista.get(index).setFakeID(fakeID);\n"
                 +"\t\t\t\t\trandomList.add(lista.get(index));\n"
                 +"\t\t\t\t}"
                 +"\t\t\t\tbw.close();\n"
                 +"\t\t\t}catch(IOException e){\n"
                 +"\t\t\t\te.printStackTrace();\n"
                 +"\t\t\t}\n"
                 +"\t\t}\n\n"
                  
                + "\t\t\treturn randomList;\n"
                + "\t\t}\n\n"
                  
                
                + "\tpublic static void criaResp(ArrayList<PlainDocument> lista){\n"
                + "\t\tXMLOutputter xout = new XMLOutputter() ; \n"
                + "\t\txout.setFormat(Format.getPrettyFormat()) ;\n"
                + "\t\tint count = 0 ;\n"
                + "\t\tString resp;\n"
                + "\t\tString[] valores;\n\n"
                  
                + "\t\tCollections.sort(lista);\n\n"  
                  
                + "\t\tfor(PlainDocument aux : lista){\n\n"
                + "\t\t\tString IDArquivo = \"\" ;\n"
                + "\t\t\tcount++ ;\n\n"
                + "\t\t\t\tif(count < 10)IDArquivo += \"000\" + count ;\n"
                + "\t\t\t\telse if(count < 100)IDArquivo += \"00\" + count ;\n"
                + "\t\t\t\t\telse if(count< 1000)IDArquivo += \"0\" + count ;\n"
                + "\t\t\t\t\t\t else IDArquivo += count ;\n\n"
                + "\t\t\tElement root = new Element(\"annotation\") ;\n\n"
                + "\t\t\tElement infoID = new Element(\"info\") ;\n"
                + "\t\t\t\tinfoID.setAttribute(\"type\",\"id\") ;\n"
                + "\t\t\t\tinfoID.setAttribute(\"value\", IDArquivo) ;\n\n"
                + "\t\t\tElement infoScheme = new Element(\"info\") ;\n"
                + "\t\t\t\tinfoScheme.setAttribute(\"type\", \"scheme\") ;\n"
                + "\t\t\t\tinfoScheme.setAttribute(\"value\",\"behav01\") ;\n\n"
                + "\t\t\tElement infoAnnotador = new Element(\"info\") ;\n"
                + "\t\t\t\tinfoAnnotador.setAttribute(\"type\", \"annotador\") ;\n"
                + "\t\t\t\tinfoAnnotador.setAttribute(\"value\", aux.getIDANNOTATOR()) ;\n\n"
                + "\t\t\tElement infoSource = new Element(\"info\") ;\n"
                + "\t\t\t\tinfoSource.setAttribute(\"type\", \"source\") ;\n"
                + "\t\t\t\tinfoSource.setAttribute(\"value\", aux.getIDARQUIVO()) ;\n\n"
                + "\t\t\tElement infoSourceCorpus = new Element(\"info\") ;\n"
                + "\t\t\t\tinfoSourceCorpus.setAttribute(\"type\", \"source-corpus\") ;\n"
                + "\t\t\t\tinfoSourceCorpus.setAttribute(\"value\", aux.getIDSEG()) ;\n\n"
                + "\t\t\troot.addContent(infoID) ;\n"
                + "\t\t\troot.addContent(infoScheme) ;\n"
                + "\t\t\troot.addContent(infoAnnotador) ;\n"
                + "\t\t\troot.addContent(infoSource) ;\n"
                + "\t\t\troot.addContent(infoSourceCorpus) ;\n\n"
                + "\t\t\tArrayList<Document>documents = aux.getDOCUMENTS() ;\n"
                + "\t\t\t\tfor(Document aux2 : documents){\n"
                + "\t\t\t\t\tElement frase = new Element(\"mark\") ;\n"
                + "\t\t\t\t\tString ID = aux2.getID() ;\n"
                + "\t\t\t\t\t\tswitch(ID.length()){\n"
                + "\t\t\t\t\t\t\tcase 1 : ID = \"000\" + ID ; break ; \n"
                + "\t\t\t\t\t\t\tcase 2 : ID = \"00\" + ID ; break ; \n"
                + "\t\t\t\t\t\t\tcase 3 : ID = \"0\" + ID ; break ; \n"
                + "\t\t\t\t\t\t}\n"
                + "\t\t\t\t\tfrase.setAttribute(\"unit\", ID) ;\n\n";
        
        
        for(Categoria temp : CATEGORIAS ){
            texto +=  "\t\t\t\t\tElement " + temp.getIdentificador_da_Categoria() + " = new Element(\"ann\") ; \n"
                    + "\t\t\t\t\t\t" + temp.getIdentificador_da_Categoria() + ".setAttribute(\"type\",\"" + temp.getIdentificador_da_Categoria() +"\") ;\n"
                    + "\t\t\t\t\t\tvalores = aux2.get" + temp.getIdentificador_da_Categoria() + "().split(\",\");\n"
                    + "\t\t\t\t\t\tresp = \"\";\n"
                    + "\t\t\t\t\t\tfor(String aux3 : valores){\n";
            
            if(temp.getTipo_da_Categoria() != 2){        
                texto += "\t\t\t\t\t\t\tresp += hashSaida" + temp.getIdentificador_da_Categoria() + ".get(aux3) + \",\";\n";
            }
            else{
                texto += "\t\t\t\t\t\t\tresp += aux3  + \",\";\n";
            }
            
            texto += "\t\t\t\t\t\t}\n"
                    + "\t\t\t\t\t\t" + temp.getIdentificador_da_Categoria() + ".setAttribute(\"value\",resp) ;\n"
                    + "\t\t\t\t\tfrase.addContent(" + temp.getIdentificador_da_Categoria() + ") ; \n\n";
        }
        
        texto  += "\t\t\t\t\troot.addContent(frase) ;\n"
                + "\t\t\t\t}\n\n"
                + "\t\t\torg.jdom2.Document document = new org.jdom2.Document(root) ;\n"
                + "\t\t\tFile file = new File(\"Annotations\") ;\n"
                + "\t\t\tif(!file.exists())file.mkdir() ;\n"
                + "\t\t\ttry{\n"
                + "\t\t\t\tBufferedWriter bw = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(new File(file,\"ann_\" + aux.getCODIGO() + \"_behav01_\" + aux.getIDSEG() + \"_\" + aux.getIDARQUIVO() + \"_\" + aux.getIDANNOTATOR() + \".xml\")),\"UTF-8\"));\n"
                + "\t\t\t\txout.output(document,bw) ;\n"
                + "\t\t\t}catch(IOException ex){\n"
                + "\t\t\t\tSystem.out.println(\"ERRO\") ;\n"
                + "\t\t\t}\n"
                + "\t\t}\n\n"
                + "\t}\n\n";
        try {
            bw.write(texto);
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Método AbreDocuments2
        texto = "\tpublic static ArrayList<Document> AbreDocuments2(int index, PlainDocument obj)\n" +
                "\t{\n" +
                "\t\tArrayList<Document> retorno = new ArrayList<Document>();\n" +
                "\t\tParser parser = null;\n" +
                "\t\t\n" +
                "\t\ttry{\n" +
                "\t\t\tparser = new Parser(obj.ARQUIVO.getAbsolutePath());\n" +
                "\t\t\tparser.execute();\n" +
                "\t\t}\n" +
                "\t\tcatch(Exception e)\n" +
                "\t\t{\n" +
                "\t\t\te.printStackTrace();\n" +
                "\t\t}\n" +
                "\t\t\n" +
                "\t\tobj.setIDARQUIVO(parser.getEspecificInfo(\"id\"));\n" +
                "\t\tobj.setIDSEG(parser.getEspecificInfo(\"scheme\"));\n" +
                "\t\t\n" +
                "\t\tArrayList<Integer> chaves = parser.getKeyUnit();\n" +
                "\t\tHashMap<Integer,String> units = parser.getUnit();\n" +
                "\t\tfor(int chave : chaves)\n" +
                "\t\t\tretorno.add(new Document(units.get(chave),String.valueOf(chave)));\n" +
                "\t\t\n" +
                "\t\treturn retorno;\n" +
                "\t}\n\n";
        
        texto   += "\tpublic static ArrayList AbreDocuments(int index,PlainDocument obj){\n"
                + "\t\tboolean controle = true;\n"
                + "\t\t ArrayList<Document> lista = new ArrayList<Document>();\n"
                + "\t\tString caminho = \"\";\n"
                + "\t\tString ID = \"\";\n"
                + "\t\tString frase = \"\";\n"
                + "\t\torg.jdom2.Document document = null;\n"
                + "\t\tSAXBuilder builder = new SAXBuilder();\n"
                + "\t\tParser parser = null;\n"
                + "\t\tFile file = null;\n"
                + "\t\tint i = index;\n\n"
                
                + "\t\t\tif(i<10)caminho = \"config/Segmentacao/seg_000\" + i + \"_clause01_C1_R000\" + i + \"_res\" + \".xml\";\n"
                + "\t\t\telse if(i<100)caminho = \"config/Segmentacao/seg_00\" + i + \"_clause01_C1_R00\" + i + \"_res\" + \".xml\";\n"
                + "\t\t\telse if(i<1000) caminho = \"config/Segmentacao/seg_0\" + i + \"_clause01_C1_R0\" + i + \"_res\" + \".xml\";\n"
                + "\t\t\telse caminho = \"config/Segmentacao/seg_\" + i + \"_clause01_C1_R\" + i + \"_res\" + \".xml\";\n\n"
                
                + "\t\t\tfile = new File(caminho);\n"
                + "\t\t\tif(!file.exists()){System.exit(-1);}\n"
                + "\t\t\ttry{\n"
                + "\t\t\t\tparser = new Parser(caminho);\n"
                + "\t\t\t\tparser.execute();\n"
                + "\t\t\t}catch(Exception e){\n"
                + "\t\t\t\te.printStackTrace();\n"
                + "\t\t\t}\n\n"
                
                + "\t\t\tobj.setIDARQUIVO(parser.getEspecificInfo(\"id\"));\n"
                + "\t\t\tobj.setIDSEG(parser.getEspecificInfo(\"scheme\"));\n\n"
                
                + "\t\t\tArrayList<Integer> chaves = parser.getKeyUnit();\n"
                + "\t\t\tHashMap<Integer,String> units = parser.getUnit();\n"
                + "\t\t\tfor(int chave : chaves){\n"
                + "\t\t\t\tlista.add(new Document(units.get(chave),String.valueOf(chave)));\n"
                + "\t\t\t}\n\n"
                
                
                + "\t\treturn lista;\n"
                + "\t}";
        
        texto   += "\tpublic static void carregaResp(PlainDocument atual){\n"
                + "\t\torg.jdom2.Document document = null ;\n"
                + "\t\tSAXBuilder builder = new SAXBuilder() ;\n"
                + "\t\tString caminho = \"Annotations/\" + \"ann_\" + atual.getCODIGO() + \"_behav01_\" + atual.getIDSEG() + \"_\" + atual.getIDARQUIVO() + \"_\" + atual.getIDANNOTATOR() + \".xml\" ;\n"
                + "\t\tFile file = new File(caminho) ;\n"
                + "\t\ttry{\n"
                + "\t\tif(file.exists()){\n\n"
                + "\t\t\tdocument = builder.build(caminho) ;\n"
                + "\t\t\tElement root = document.getRootElement() ;\n"
                + "\t\t\tList<Element> elementos = root.getChildren() ; \n"
                + "\t\t\tList<Document> documents = atual.getDOCUMENTS() ; \n"
                + "\t\t\tIterator<Document> it = documents.iterator() ; \n"
                + "\t\t\tDocument doc = null ;"
                + "\t\t\tString[] valores;\n"
                + "\t\t\tString resp = \"\";\n"
                + "\t\t\tint count = 0 ;\n\n"
                + "\t\t\tfor(Element aux : elementos){\n"
                + "\t\t\t\tcount++ ;\n"
                + "\t\t\t\tif(count > 5){ \n"
                + "\t\t\t\t\tdoc = it.next() ;\n"
                + "\t\t\t\t\tint count2 = 0 ;\n"
                + "\t\t\t\t\tfor(Element mark : aux.getChildren()){\n"
                + "\t\t\t\t\t\tcount2++ ; \n";
        
        for(int i = 0;i<CATEGORIAS.size();i++){
            texto  += "\t\t\t\t\t\tif(count2 == " + (i + 1) + "){\n"
                    + "\t\t\t\t\t\tresp = \"\";\n"
                    + "\t\t\t\t\t\tvalores = mark.getAttributeValue(\"value\").split(\",\");\n"
                    + "\t\t\t\t\t\t\tfor(String temp : valores){\n";
            if(CATEGORIAS.get(i).getTipo_da_Categoria() != 2){        
                texto  += "\t\t\t\t\t\t\t\tresp += hashEntrada" + CATEGORIAS.get(i).getIdentificador_da_Categoria() + ".get(temp) + \",\";\n";
            }
            else{
                texto  += "\t\t\t\t\t\t\t\tresp += temp + \",\";\n";
            }
            
            texto  += "\t\t\t\t\t\t\t}\n"
                    + "\t\t\t\t\t\tdoc.set" + CATEGORIAS.get(i).getIdentificador_da_Categoria() +"(resp) ;\n\n" 
                    + "\t\t\t\t\t\t}\n";
        }
        
        if(CATEGORIAS.size() != 0){
                     
                     texto += "\t\t\t\t\t\tif(";
                     
                     for(int i = 0; i<CATEGORIAS.size(); i++ ){
                         if(i == 0) texto += " !doc.get" + CATEGORIAS.get(i).getIdentificador_da_Categoria() + "().equals(\"\")"; 
                         else texto += " && !doc.get" + CATEGORIAS.get(i).getIdentificador_da_Categoria() + "().equals(\"\")";
                     }
                     
                     texto += " ) doc.setCOMPLETO(true) ;\n"
                             + "\t\t\t\t\t\telse doc.setCOMPLETO(false);\n";
                     
                 }
        
       texto  += "\t\t\t\t\t}\n"
               + "\t\t\t\t}\n"
               + "\t\t\t}\n"
               + "\t\t}\n"
               + "\t\t}catch(Exception e){\n"
               + "\t\t\tSystem.out.println(\"EXCEPTION!!!!\") ;\n"
               + "\t\t\te.printStackTrace() ; \n"
               + "\t\t}\n"
               + "\t}\n\n";
        try {
            bw.write(texto); 
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        texto   = "\tpublic static String abreAnnotator(){\n"
                + "\t\tString annotator = null;\n"
                + "\t\torg.jdom2.Document document = null;\n"
                + "\t\tSAXBuilder builder = new SAXBuilder();\n"
                + "\t\tString caminho = \"config/annotator.xml\";\n"
                + "\t\ttry{\n"
                + "\t\t\tFile file = new File(caminho);\n"
                + "\t\t\tif(!file.exists()){\n"
                + "\t\t\t\tSystem.exit(-1);\n"
                + "\t\t\t}\n\n"
                
                + "\t\t\tdocument = builder.build(caminho);\n"
                + "\t\t\tElement root = document.getRootElement();\n"
                + "\t\t\tList<Element> elementos = root.getChildren();\n"
                + "\t\t\tIterator<Element> it = elementos.iterator();\n"
                + "\t\t\tElement atual = it.next();\n"
                + "\t\t\tannotator = atual.getAttributeValue(\"value\");\n\n"
                
                + "\t\t}catch(Exception e){\n"
                + "\t\t\te.printStackTrace();\n"
                + "\t\t}\n\n"
                
                + "\t\treturn annotator;\n"
                + "\t}\n\n";
        
        try {
            bw.write(texto); 
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        finalizaClasse(bw);
        
    }
    
    private void constroiMain(Locale ferramentaLocale, TreeMap <String,String> extras, String nomeProjeto){
        
        criaArquivoJava("Main");
        criaPackage(bw, "source");
        criaImport(bw, "common.*");
        criaImport(bw, "java.awt.Event");
        criaImport(bw, "java.awt.event.ActionEvent");
        criaImport(bw, "java.awt.event.KeyEvent");
        criaImport(bw, "java.awt.event.WindowAdapter");
        criaImport(bw, "java.awt.event.WindowEvent");
        criaImport(bw, "java.awt.event.WindowListener");
        criaImport(bw, "java.util.ArrayList");
        criaImport(bw, "javax.swing.AbstractAction");
        criaImport(bw, "javax.swing.Action");
        criaImport(bw, "javax.swing.JComponent");
        criaImport(bw, "javax.swing.JOptionPane");
        criaImport(bw, "javax.swing.KeyStroke");
        iniciaClasseHeranca(bw, "Main","javax.swing.JFrame");
        
        ResourceBundle bundle = ResourceBundle.getBundle("MetaAnn.Idioma.Ferramenta.Main.Main", ferramentaLocale);
        
        String texto;
                      /*
                       * Construtor Main
                       */
            texto   = "\tpublic Main(){\n" // construtor
                    + "\t\tinitComponents() ;\n"
                    + "\t\tprepara();"
                    + "\t}\n\n"
                    
                    /*
                     * Método Prepara
                     */
                  
                    + "\tpublic void prepara(){\n"
                    + "\t\tannotator = Arquivo.abreAnnotator();\n"
                    + "\t\tisSaved = true;\n"
                    + "\t\tlista = arquivo.abreArquivo2(annotator);\n"
                    + "\t\tIDgroupMax = lista.size()-1; \n"
                    + "\t\tIDmax = Integer.parseInt(lista.get(lista.size()-1).ult().getFAKE_ID());\n"
                    + "\t\tinicio();\n"
                    + "\t\t//ToolTips\n" 
                    + "\t\tBsalvar.setToolTipText(\"CTRL+S\");\n"
                   // + "\t\tcarregaCaracteristica();\n"
                    + "\t}\n\n";
            
                    /*
                     * Método verificaDisplayP
                     */
            
            texto  += "\tprivate void verificaDisplayP(String frase){\n"
                    + "\t\tString atual = DisplayP.getText();\n"
                    + "\t\tif(!atual.equals(frase)){\n"
                    + "\t\t\tDisplayP.setText(frase);\n"
                    + "\t\t\tDisplayP.getCaret().moveDot(0);\n"
                    + "\t\t}\n"
                    + "\t}\n\n";
            
                    /*
                     *  Método Inicio
                     */
            
            texto  += "\tpublic void inicio(){\n"
                    + "\t\tverificaDisplayP(lista.get(0).getTEXTO());\n";
                   
                    for(String variavelExtra : extras.values())
                        texto += "\t\tText" + variavelExtra + ".setText(lista.get(0).get" + variavelExtra + "());\n";
            
            texto   += "\t\tauxf = lista.get(0).first();\n"
                    + "\t\tTextFrase.setText(auxf.getMENSAGEM());\n"
                    + "\t\tTextIdOracao.setText(auxf.getIDNum());\n"
                    + "\t\tcarregaCaracteristica();\n"
                    + "\t\tIDnum = 0;\n"
                    + "\t\tIDant = 0;\n"
                    + "\t\tIDgroup = 0;\n"
                    + "\t\t\n"
                    + "\t\tatualizaContador();\n"
                    + "\t}\n\n"; 
            
                    /* AtualizaContador */
                    
            texto   += "\tpublic void atualizaContador(){\n"
                    +  "\t\tjLabelCont.setText(auxf.getFAKE_ID() + \" de \" + IDmax);\n"
                    +  "\t}\n\n";
            
                    /*
                     * CarregaCaracteristica
                     */
            
            texto += "\tpublic void carregaCaracteristica(){\n";
            
            for(Categoria aux : CATEGORIAS){
            
                if(aux.getTipo_da_Categoria() != 2){
                    texto  += "\t\tjCombo" + aux.getIdentificador_da_Categoria() + ".setSelectedIndex(0);\n";
                            
                }
                
                    texto  += "\t\tText" + aux.getIdentificador_da_Categoria() + ".setText(auxf.get" + aux.getIdentificador_da_Categoria() + "());\n"
                            + "\t\tif(Text" + aux.getIdentificador_da_Categoria() + ".getText().replaceAll(\",\",\"\").trim().length() != 0)"
                            + " auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(true);\n"
                            + "\t\telse auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(false);\n"; 
            }
            
            texto += "\t\tmudancaDeEstado();\n"
                    + "\t}\n\n";
            
                    /*
                     * ActionPerformed
                     */
            
                     /*
                      * Binicio modificado
                      */
            
            texto  += "\tprivate void BinicioActionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\tBsalvarActionPerformed(evt);\n"
                    + "\t\tinicio();\n"
                    + "\t}\n\n"
                    
                    /*
                     * Bsalvar
                     */
                    
                    + "\tprivate void BsalvarActionPerformed(java.awt.event.ActionEvent evt) {\n";
            
                 for(Categoria aux : CATEGORIAS){
                     
                     texto += "\t\tauxf.set" + aux.getIdentificador_da_Categoria() + "(Text" + aux.getIdentificador_da_Categoria() + ".getText());\n"
                            + "\t\tif(Text" + aux.getIdentificador_da_Categoria() + ".getText().replaceAll(\",\",\"\").trim().length() != 0)"
                            + " auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(true);\n"
                            + "\t\telse auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(false);\n"; 
                     // talvez não precise das 3 linhas acima
                     
                 }
                 
                 if(CATEGORIAS.size() != 0){
                     
                     texto += "\t\tif(";
                     
                     for(int i = 0; i<CATEGORIAS.size(); i++ ){
                         if(i == 0) texto += " !auxf.get" + CATEGORIAS.get(i).getIdentificador_da_Categoria() + "().equals(\"\")"; 
                         else texto += " && !auxf.get" + CATEGORIAS.get(i).getIdentificador_da_Categoria() + "().equals(\"\")";
                     }
                     
                     texto += " ) auxf.setCOMPLETO(true) ;\n"
                             + "\t\telse auxf.setCOMPLETO(false);\n";
                     
                 }
                 
                    texto += "\t}\n\n";
                    
                    /*
                     * BsalvarArq
                     */
                    
            texto  += "\tpublic void BsalvarArqActionPerformed(java.awt.event.ActionEvent evt)\n" 
                    + "\t{\n" 
                    + "\t\tBsalvarActionPerformed(evt);\n" 
                    + "\t\t\n" 
                    + "\t\t//Salvar no arquivo de texto\n" 
                    + "\t\tArquivo.criaResp(lista);\n" 
                    + "\t\t\n" 
                    + "\t\tisSaved = true;\n" 
                    + "\t\t\n" 
                    + "\t\t//Dar mensagem de feedback\n" 
                    + "\t\tJOptionPane.showMessageDialog(this, \""+ bundle.getString("salvoSucesso") +"\", \""+nomeProjeto+" "+bundle.getString("salvoSucessoTitulo")+"\", JOptionPane.INFORMATION_MESSAGE);\n" 
                    + "\t}\n\n";
                    
                    /*
                     * Bant
                     */
                    
            texto  += "\tprivate void BantActionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\tif((IDnum-1)>=0)IDnum--;\n"
                    + "\t\telse return;\n"
                    + "\t\tBsalvarActionPerformed(evt);\n"
                    + "\t\tauxf = lista.get(IDgroup).next(IDnum-IDant);\n"
                    + "\t\twhile(auxf == null){\n"
                    + "\t\t\tif(IDgroup-1>=0)IDgroup--;\n"
                    + "\t\t\telse return;\n"
                    + "\t\t\tauxf = lista.get(IDgroup).first();\n"
                    + "\t\t\tIDant = Integer.parseInt(auxf.getIDNum());\n"
                    + "\t\t\tauxf = lista.get(IDgroup).next(IDnum - IDant);\n"
                    + "\t\t}\n"
                    + "\t\tverificaDisplayP(lista.get(IDgroup).getTEXTO());\n";
                  //  + "\t\tTextPontoVista.setText(lista.get(IDgroup).getPONTODEVISTA());\n"
            
                    for(String variavelExtra : extras.values())
                        texto += "\t\tText" + variavelExtra + ".setText(lista.get(IDgroup).get" + variavelExtra + "());\n";
            
              texto += "\t\tTextFrase.setText(auxf.getMENSAGEM());\n"
                    + "\t\tTextIdOracao.setText(auxf.getFAKE_ID());\n"
                    + "\t\tcarregaCaracteristica();\n"
                    + "\t\tatualizaContador();\n"
                    + "\t}\n\n"
                    
                    /*
                     * Bnext
                     */
                    
                    + "\tprivate void BnextActionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\tif((IDnum+1)<IDmax)IDnum++;\n"
                    + "\t\telse return;\n"
                    + "\t\tBsalvarActionPerformed(evt);\n"
                    + "\t\tauxf = lista.get(IDgroup).next(IDnum-IDant);\n"
                    + "\t\twhile(auxf == null){\n"
                    + "\t\t\tIDant = IDnum;\n"
                    + "\t\t\tif(IDgroup+1<=IDgroupMax)IDgroup++;\n"
                    + "\t\t\telse return;\n"
                    + "\t\t\tauxf = lista.get(IDgroup).next(IDnum - IDant);\n"
                    + "\t\t}\n"
                    + "\t\tverificaDisplayP(lista.get(IDgroup).getTEXTO());\n";
                 //   + "\t\tTextPontoVista.setText(lista.get(IDgroup).getPONTODEVISTA());\n"
              
                    for(String variavelExtra : extras.values())
                        texto += "\t\tText" + variavelExtra + ".setText(lista.get(IDgroup).get" + variavelExtra + "());\n";
              
              texto += "\t\tTextFrase.setText(auxf.getMENSAGEM());\n"
                    + "\t\tTextIdOracao.setText(auxf.getIDNum());\n"
                    + "\t\tcarregaCaracteristica();\n"
                    + "\t\tatualizaContador();\n"
                    + "\t}\n\n"
                    
                    /*
                     * Bfim
                     */
                    + "\tprivate void BfimActionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\tBsalvarActionPerformed(evt);\n"
                    + "\t\tverificaDisplayP(lista.get(lista.size()-1).getTEXTO());";
                //    + "\t\tTextPontoVista.setText(lista.get(lista.size()-1).getPONTODEVISTA());\n"
              
                    for(String variavelExtra : extras.values())
                        texto += "\t\tText" + variavelExtra + ".setText(lista.get(lista.size()-1).get" + variavelExtra + "());\n";
              
              texto += "\t\tauxf = lista.get(lista.size()-1).ult(); \n"
                    + "\t\tTextFrase.setText(auxf.getMENSAGEM());\n"
                    + "\t\tTextIdOracao.setText(auxf.getFAKE_ID());\n"
                    + "\t\tIDnum = Integer.parseInt(auxf.getIDNum())-1;\n"
                    + "\t\tIDant = Integer.parseInt(lista.get(lista.size()-1).first().getFAKE_ID())-1;\n"
                    + "\t\tIDgroup = lista.size()-1;\n"
                    + "\t\tcarregaCaracteristica();\n"
                    + "\t\tatualizaContador();"
                    + "\t}\n\n"
                    
                    /*
                     * Bir
                     */
                    
                    + "\tprivate void BirActionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\tint IDbuscar;\n"
                    + "\t\tint aux;\n"
                    + "\t\tint group = 0;\n"
                    + "\t\ttry{\n"
                    + "\t\t\tIDbuscar = Integer.parseInt(TextIr.getText());\n"
                    + "\t\t}catch(Exception e){\n"
                    + "\t\t\tTextIr.setText(\"\");\n"
                    + "\t\t\treturn;\n"
                    + "\t\t}\n"
                    + "\t\tif (IDbuscar >IDmax || IDbuscar <= 0 )return;\n"
                    + "\t\tBsalvarActionPerformed(evt);\n"
                    + "\t\taux = Integer.parseInt(lista.get(group).first().getIDNum());\n"
                    + "\t\tauxf = lista.get(group).next(IDbuscar - aux);\n"
                    + "\t\twhile(auxf == null){ \n"
                    + "\t\t\tif(group+1<=IDgroupMax)group++;\n"
                    + "\t\t\telse return;\n"
                    + "\t\t\taux = Integer.parseInt(lista.get(group).first().getFAKE_ID());\n"
                    + "\t\t\tauxf = lista.get(group).next(IDbuscar - aux);\n"
                    + "\t\t}\n"
                    + "\t\tIDgroup = group;\n"
                    + "\t\tIDnum = IDbuscar;\n"
                    + "\t\tIDant = aux;\n"
                    + "\t\tverificaDisplayP(lista.get(group).getTEXTO());\n";
                //    + "\t\tTextPontoVista.setText(lista.get(group).getPONTODEVISTA());\n"
              
                    for(String variavelExtra : extras.values())
                        texto += "\t\tText" + variavelExtra + ".setText(lista.get(group).get" + variavelExtra + "());\n";
              
              texto += "\t\tTextFrase.setText(auxf.getMENSAGEM());\n"
                    + "\t\tTextIdOracao.setText(auxf.getFAKE_ID());\n"
                    + "\t\tcarregaCaracteristica();\n"
                    + "\t\tatualizaContador();\n"
                    + "\t}\n\n"
            
                    /*
                     * Bsair
                     */
                    
                    + "\tprivate void BsairActionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\tBsalvarActionPerformed(evt); \n"
                    + "\t\tthis.setEnabled(false);\n"
                    + "\t\tif(lista != null && lista.size()!=0){\n"
                    + "\t\t\tAviso x = new Aviso(lista,this);\n"
                    + "\t\t\tx.setVisible(true);\n"
                    + "\t\t}\n"
                    + "\t\telse System.exit(-1);\n"
                    + "\t}\n\n" 
            
                    /*
                     * Configura ActionWindowClosing
                     */
                  
                    + "\t\tprivate void formWindowClosing(java.awt.event.WindowEvent evt) {\n"
                    + "\t\t\tBsairActionPerformed(null);\n"
                    + "\t\t}\n\n";
                            
                    
                    /*
                     * ActionPerformed Geradas automaticamente
                     */
           
            for(Categoria aux : CATEGORIAS){
                
                if(aux.getTipo_da_Categoria() != 2){
                    if(aux.getTipo_da_Categoria() == 1){
                        
                        texto += "\tprivate void jCombo" + aux.getIdentificador_da_Categoria() + "ActionPerformed(java.awt.event.ActionEvent evt){\n"
                               + "\t\tif(jCombo" + aux.getIdentificador_da_Categoria() + ".getSelectedIndex() == 0){\n"
                               + "\t\t\tif(evt.getModifiers()>0)\n"
                               + "\t\t\t\tClearText" + aux.getIdentificador_da_Categoria() + "ActionPerformed(evt);\n"
                               + "\t\t}\n"
                               + "\t\telse{"
                               + "\t\t\tboolean ok = true;\n"
                               + "\t\t\tfor(String temp : Text" + aux.getIdentificador_da_Categoria() + ".getText().split(\",\")){\n"
                               + "\t\t\t\tif(temp.equals(jCombo" + aux.getIdentificador_da_Categoria() + ".getSelectedItem())){\n"
                               + "\t\t\t\t\tok = false;\n"
                               + "\t\t\t\t\tbreak;\n"
                               + "\t\t\t\t}\n"
                               + "\t\t\t}\n"
                               + "\t\t\tif(ok)Text" + aux.getIdentificador_da_Categoria() + ".setText(jCombo" + aux.getIdentificador_da_Categoria()
                               + ".getSelectedItem() + \",\" + Text" + aux.getIdentificador_da_Categoria() + ".getText()) ;\n"
                               + "\t\t\tif(Text" + aux.getIdentificador_da_Categoria() + ".getText().replaceAll(\",\",\"\").trim().length() != 0) "
                               + "auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(true);\n"
                               + "\t\t\telse auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(false);\n\n"
                               + "\t\t\tmudancaDeEstado();\n" // evento de mudança de estado
                               + "\t\t\tmudancaDeEstado2();\n"
                               + "\t\t}\n" 
                               + "\t}\n\n" ;
                    }
                                     
                    
                    else{
                    
                        texto += "\tprivate void jCombo" + aux.getIdentificador_da_Categoria() + "ActionPerformed(java.awt.event.ActionEvent evt){\n"
                               + "\t\tif(jCombo" + aux.getIdentificador_da_Categoria() + ".getSelectedIndex() == 0){\n"
                               + "\t\t\tif(evt.getModifiers()>0)\n"
                               + "\t\t\t\tClearText" + aux.getIdentificador_da_Categoria() + "ActionPerformed(evt);\n"
                               + "\t\t}\n"
                               + "\t\telse{"
                               + "\t\t\tText" + aux.getIdentificador_da_Categoria() + ".setText((String)jCombo" + aux.getIdentificador_da_Categoria() + ".getSelectedItem());\n\n"
                               + "\t\t\tif(Text" + aux.getIdentificador_da_Categoria() + ".getText().replaceAll(\",\",\"\").trim().length() != 0) "
                               + "auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(true);\n"
                               + "\t\t\telse auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(false);\n\n"
                               + "\t\t\tmudancaDeEstado();\n" 
                               + "\t\t\tmudancaDeEstado2();\n"
                               + "\t\t}"
                               + "\t}\n\n" ;
                    }
                    
                        texto += "\tprivate void ClearText" + aux.getIdentificador_da_Categoria() + "ActionPerformed(java.awt.event.ActionEvent evt) {\n"
                               + "\t\tText" + aux.getIdentificador_da_Categoria() + ".setText(\"\") ;\n"
                               + "\t\tjCombo" + aux.getIdentificador_da_Categoria() + ".setSelectedIndex(0);\n"
                               + "\t\tauxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(false);\n"
                               + "\t\tmudancaDeEstado();\n"
                               + "\t\tmudancaDeEstado2();\n"
                               + "\t}\n\n";
                }
                else{
                       texto += "\tprivate void  Text" + aux.getIdentificador_da_Categoria() + "FocusLost(java.awt.event.FocusEvent evt) {\n"
                              + "\t\tif(Text" + aux.getIdentificador_da_Categoria() + ".getText().replaceAll(\",\", \"\").trim().length() != 0) "
                              + "auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(true);\n" // evento mudança de estado
                              + "\t\telse auxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(false);\n" // evento mudança de estado
                              + "\t\tmudancaDeEstado();\n"
                              + "\t\tmudancaDeEstado2();\n"
                              + "}\n\n";
                       
                        texto += "\tprivate void ClearText" + aux.getIdentificador_da_Categoria() + "ActionPerformed(java.awt.event.ActionEvent evt) {\n"
                               + "\t\tText" + aux.getIdentificador_da_Categoria() + ".setText(\"\") ;\n"
                               + "\t\tauxf.setCATEGORIA" + aux.getIdentificador_da_Categoria() + "COMPLETO(false);\n"
                               + "\t\tmudancaDeEstado();\n"
                               + "\t\tmudancaDeEstado2();\n"
                               + "\t}\n\n";
                }
             
                
            }
            
                    /*
                     * Método mudancaDeEstado()
                     */
           //Text_Tipo_da_Categoria.setEnabled(rootPaneCheckingEnabled);
            texto += "\tprivate void mudancaDeEstado(){\n\n";
            
                for(Categoria atual : CATEGORIAS){
                    if(atual.getDependencias().size()==0) continue;
                    for(int i =0;i< atual.getDependencias().size();i++){
                        if(i==0) texto += "\t\tif(auxf.getCATEGORIA" + atual.getDependencias().get(i).getIdentificador_da_Categoria() + "COMPLETO() ";
                        else     texto += "&& auxf.getCATEGORIA" + atual.getDependencias().get(i).getIdentificador_da_Categoria() + "COMPLETO() ";
                    }
                    
                    texto += "){\n";
                    
                        if(atual.getTipo_da_Categoria() !=2){
                            
                            texto += "\t\t\tjCombo" + atual.getIdentificador_da_Categoria() + ".setEnabled(true);\n"
                                   + "\t\t\tText"   + atual.getIdentificador_da_Categoria() + ".setEnabled(true);\n";
                                    
                        }
                        
                        else{
                            
                            texto += "\t\t\tText"   + atual.getIdentificador_da_Categoria() + ".setEnabled(true);\n";
                            
                        }
                    
                    texto += "\t\t}\n"
                           + "\t\telse{\n";
                    
                        if(atual.getTipo_da_Categoria() !=2){
                            
                            texto += "\t\t\tjCombo" + atual.getIdentificador_da_Categoria() + ".setEnabled(false);\n"
                                   + "\t\t\tjCombo" + atual.getIdentificador_da_Categoria() + ".setSelectedIndex(0);\n" 
                                   + "\t\t\tText"   + atual.getIdentificador_da_Categoria() + ".setEnabled(false);\n"
                                   + "\t\t\tText"   + atual.getIdentificador_da_Categoria() + ".setText(\"\") ;\n";
                                    
                        }
                        
                        else{
                            
                            texto += "\t\t\tText"   + atual.getIdentificador_da_Categoria() + ".setEnabled(false);\n"
                                   + "\t\t\tText"   + atual.getIdentificador_da_Categoria() + ".setText(\"\");\n";
                            
                        }    
                    texto += "\t\t}\n\n";
                }
            
            texto += "\t}\n\n";
                    
                    /* Método mudancaDeEstado2 */
                    
            texto += "\tprivate void mudancaDeEstado2(){\n" 
                    + "\t\tisSaved = false;\n" 
                    + "\t}\n\n";
                    
                    /*
                     * Método InitComponents()
                     */
                    
            texto  += "\tprivate void initComponents(){\n" // metodo initComponents
                    
                    /*
                     * Atribuição de Variaveis
                     */
                    
                    + "\t\tjScrollPane1 = new javax.swing.JScrollPane() ;\n\n" //cria objeto Painel
                    + "\t\tID = new javax.swing.JPanel(); \n"
                    + "\t\tjLabelCont = new javax.swing.JLabel();\n"
                    + "\t\tBinicio = new javax.swing.JButton();\n"
                    + "\t\tBfim = new javax.swing.JButton();\n"
                    + "\t\tBant = new javax.swing.JButton();\n"
                    + "\t\tBnext = new javax.swing.JButton();\n"
                    + "\t\tBir = new javax.swing.JButton();\n"
                    + "\t\tBsair = new javax.swing.JButton();\n"
                    + "\t\tBsalvar = new javax.swing.JButton();\n"
                    + "\t\tDisplayP = new javax.swing.JTextPane();\n"
                    + "\t\tjScrollPane2 = new javax.swing.JScrollPane();\n"
                    + "\t\tTextFrase = new javax.swing.JTextPane();\n"
                    + "\t\tjScrollPane3 = new javax.swing.JScrollPane();\n"
                    + "\t\tTextIdOracao = new javax.swing.JTextField();\n"
                    + "\t\tTextIr = new javax.swing.JTextField();\n"
              //      + "\t\tTextPontoVista = new javax.swing.JTextField();\n"
                    + "\t\tjLabel1 = new javax.swing.JLabel();\n"
                    + "\t\tjLabel2 = new javax.swing.JLabel();\n"
             //       + "\t\tjLabel3 = new javax.swing.JLabel();\n"
                    + "\t\tjPanelExtra = new javax.swing.JPanel();\n"
                    + "\t\tjPanel2 = new javax.swing.JPanel();\n"
                    + "\t\tjPanel1 = new javax.swing.JPanel();\n";
            
            /*
             * Atribuição de Variaveis Criadas Automaticamente
             */
            
            for(Categoria aux : CATEGORIAS){
                if(aux.getTipo_da_Categoria() != 2){
                    texto += "\t\tjCombo" + aux.getIdentificador_da_Categoria() + " = new javax.swing.JComboBox();\n"
                          + "\t\tjLabel" + aux.getIdentificador_da_Categoria() + " = new javax.swing.JLabel();\n"
                          + "\t\tjButton" + aux.getIdentificador_da_Categoria() + " = new javax.swing.JButton();\n"
                          + "\t\tText" + aux.getIdentificador_da_Categoria() + " = new javax.swing.JTextPane();\n";
                }
                else{
                    texto += "\t\tjLabel" + aux.getIdentificador_da_Categoria() + " = new javax.swing.JLabel();\n"
                          + "\t\tjButton" + aux.getIdentificador_da_Categoria() + " = new javax.swing.JButton();\n"
                          + "\t\tText" + aux.getIdentificador_da_Categoria() + " = new PlaceholderTextPane();\n";
                }
                    texto += "\t\tjScrollPane" + aux.getIdentificador_da_Categoria() + " = new javax.swing.JScrollPane();\n"
                          + "\t\tClearText" + aux.getIdentificador_da_Categoria() + " = new javax.swing.JButton();\n";
            }
            
            /*
             * Atribuição das Variaveis Extras
             */
            
            for(String variavelExtra : extras.values()){
                texto +=  "\t\tText"  + variavelExtra + " = new javax.swing.JTextField();\n"
                        + "\t\tjLabel" + variavelExtra + " = new javax.swing.JLabel();\n";  
            }
                    
                   
           texto    += "\n\t\tsetDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);\n" // define o que o painel faz quando clica-se no X
                    + "\t\tsetResizable(false) ;\n"
                   + "\t\taddWindowListener(aoFecharJanela());\n"
                   + "\t\tsetTitle(\""+ nomeProjeto +"\");\n"
                    
                    /*
                     * Configuração do Panel ID
                     */
                    
                    + "\t\tID.setBackground(new java.awt.Color(0, 102, 153)) ;\n\n" // define cor do painel
                    
                    /*
                     * Configuração do Botão Binicio
                     */
                    
                    + "\t\tBinicio.setText(\"<<\");\n"
                    + "\t\tBinicio.setMnemonic(KeyEvent.VK_HOME);\n" 
                    + "\t\tBinicio.setToolTipText(\"ALT + HOME\");\n"
                    + "\t\tBinicio.addActionListener(new java.awt.event.ActionListener() {\n"
                    + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\t\t\tBinicioActionPerformed(evt);" 
                    + "\t\t\t}\n"
                    + "\t\t});\n\n"
                    
                    /*
                     * Configura botão Bfim
                     */
                    
                    + "\t\tBfim.setText(\">>\");\n"
                    + "\t\tBfim.setMnemonic(KeyEvent.VK_END);\n" 
                    + "\t\tBfim.setToolTipText(\"ALT + END\");\n"
                    + "\t\tBfim.addActionListener(new java.awt.event.ActionListener() {\n"
                    + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\t\t\tBfimActionPerformed(evt);\n"
                    + "\t\t\t}\n"
                    + "\t\t});\n\n"
                    
                    /*
                     * Configura botão Bant
                     */
                    
                    + "\t\tBant.setText(\"<\");\n"
                    + "\t\tBant.setMnemonic(',');\n" 
                    + "\t\tBant.setToolTipText(\"ALT + <\");\n"
                    + "\t\tBant.addActionListener(new java.awt.event.ActionListener() {\n"
                    + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\t\t\tBantActionPerformed(evt);\n"
                    + "\t\t\t}\n"
                    + "\t\t});\n\n"
                    
                    /*
                     * Configura botão Bnext
                     */
                    
                    + "\t\tBnext.setText(\">\");\n"
                    + "\t\tBnext.setMnemonic('.');\n" 
                    + "\t\tBnext.setToolTipText(\"ALT + >\");\n"
                    + "\t\tBnext.addActionListener(new java.awt.event.ActionListener() {\n"
                    + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\t\t\tBnextActionPerformed(evt);\n"
                    + "\t\t\t}\n"
                    + "\t\t});\n\n"
                    
                    /*
                     * Configura Botão Ir
                     */
                    
                    + "\t\tBir.setText(\"" + bundle.getString("ir") + "\");\n"
                    + "\t\tBir.addActionListener(new java.awt.event.ActionListener() {\n"
                    + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\t\t\tBirActionPerformed(evt);\n"
                    + "\t\t\t}\n"
                    + "\t\t});\n\n"
                    
                    /*
                     * Configura Botão Sair
                     */
                    
                    + "\t\tBsair.setText(\"" + bundle.getString("sair")+ "\");\n"
                    + "\t\tBsair.addActionListener(new java.awt.event.ActionListener() {\n"
                    + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\t\t\tBsairActionPerformed(evt);\n"
                    + "\t\t\t}\n"
                    + "\t\t}); \n\n"
                    
                    /*
                     * Configura Botão Salvar
                     */
                    
                    + "\t\tBsalvar.setText(\""+ bundle.getString("salvar") + "\");\n"
                    + "\t\tBsalvar.setToolTipText(\"CTRL+S\");\n"
                    + "\t\tBsalvar.addActionListener(new java.awt.event.ActionListener() {\n"
                    + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                    + "\t\t\t\tBsalvarArqActionPerformed(evt);\n"
                    + "\t\t\t}\n"
                    + "\t\t});\n\n"
                    
                    /*
                     * Configura DisplayP
                     */
                    
                    + "\t\tDisplayP.setFocusTraversalPolicy(null);\n"
                    + "\t\tDisplayP.setFocusable(false);\n"
                    + "\t\tjScrollPane2.setViewportView(DisplayP); \n\n" // Define o Scroll para o DisplayP
                    
                    /*
                     * Configura TextFrase
                     */
                    
                    + "\t\tTextFrase.setEditable(false);\n"
                    + "\t\tjScrollPane3.setViewportView(TextFrase);\n\n"
                    
                    /*
                     * Configura TextIdOracao
                     */
                    
                    + "\t\tTextIdOracao.setEditable(false);\n"
                    + "\t\tTextIdOracao.setFont(new java.awt.Font(\"Tahoma\", 1, 12));\n"
                    + "\t\tTextIdOracao.setHorizontalAlignment(javax.swing.JTextField.CENTER);\n\n"
                    
                    /*
                     * Configura jLabelCont
                     */
                   
                    + "\t\tjLabelCont.setFont(new java.awt.Font(\"Tahoma\", 1, 12));\n"
                    + "\t\tjLabelCont.setForeground(new java.awt.Color(255, 255, 255));\n"
                    + "\t\tjLabelCont.setText(\"1 de 2\");\n"
                    + "\t\tjLabelCont.setHorizontalAlignment(javax.swing.JLabel.CENTER);\n\n"
                   
                    /*
                     * Configura JLabel1
                     */
                    
                    + "\t\tjLabel2.setFont(new java.awt.Font(\"Tahoma\", 0, 12));\n"
                    + "\t\tjLabel2.setForeground(new java.awt.Color(255, 255, 255));\n"
                    + "\t\tjLabel2.setText(\"" + bundle.getString("unidade") +"\");\n\n"
                    
                    /*
                     * Configura JLabel2
                     */
                    
                    + "\t\tjLabel1.setBackground(new java.awt.Color(255, 255, 255));\n"
                    + "\t\tjLabel1.setFont(new java.awt.Font(\"Tahoma\", 0, 12)); \n"
                    + "\t\tjLabel1.setForeground(new java.awt.Color(255, 255, 255));\n"
                    + "\t\tjLabel1.setText(\"" + bundle.getString("ID_unidade") + "\" );\n\n"
                   
                   /*
                    * Configura jPanelExtra
                    */
                   
                   + "\t\tjPanelExtra.setBackground(new java.awt.Color(0, 102, 153));\n"
                   
                   /*
                    * Configura jPanel1
                    */
                   
                   + "\t\tjPanel1.setBackground(new java.awt.Color(0, 102, 153));\n"
                   + "\t\tjPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null,\""+ bundle.getString("classificacao") +"\", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font(\"Arial Narrow\", 1, 16), new java.awt.Color(0, 0, 0)));\n\n"
                   
                    /*
                     * Configura jPanel2
                     */
                    
                    + "\t\tjPanel2.setBackground(new java.awt.Color(0, 102, 153));\n"
                    + "\t\tjPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null,\"" + bundle.getString("resumo") +"\", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font(\"Arial Narrow\", 1, 16), new java.awt.Color(0, 0, 0)));\n"
                    + "\t\tjPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));\n\n";
                    
           
                   /*
                    * Configura Variaveis Criadas Automaticamente
                    */
           
            for(Categoria aux : CATEGORIAS){
                
                //Função ativada pelo Help Icon
                String funcao = "";
                String toolTipText = "";
                switch(aux.getTipo_da_Categoria())
                {
                    case 0:
                        funcao = "avisoMutuamenteExclusivo";
                        toolTipText = bundle.getString("textoHelpMutuamenteExc");
                        break;
                    case 1:
                        funcao = "avisoListaSimples";
                        toolTipText = bundle.getString("textoHelpListaSimples");
                        break;
                    case 2:
                        funcao = "avisoTextoLivre";
                        toolTipText = bundle.getString("textoHelpTextoLivre");
                        break;
                }
                
                if(aux.getTipo_da_Categoria()!=2){
                    
                            /*
                             * Cria Combo
                             */
                    
                    texto  += "\t\tjCombo" + aux.getIdentificador_da_Categoria() + ".setModel(new javax.swing.DefaultComboBoxModel<String>(new String[] { \"ESCOLHA...\", ";
                                for(int i = 0;i<aux.getOpcoesModel().getSize();i++){
                                    if(i+1 == aux.getOpcoesModel().getSize()) texto += " \"" + aux.getOpcoesModel().get(i) + "\" ";
                                    else texto += " \"" + aux.getOpcoesModel().get(i) + "\",";
                                }
                                texto += "}));\n";
                                
                    texto  += "\t\tjCombo" + aux.getIdentificador_da_Categoria() + ".addActionListener(new java.awt.event.ActionListener() {\n"
                            + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                            + "\t\t\t\tjCombo" + aux.getIdentificador_da_Categoria() + "ActionPerformed(evt);\n"
                            + "\t\t\t}\n"
                            + "\t\t});\n\n"
                            
                            /*
                             * Cria Botão 
                             */
                            
                            + "\t\tClearText" + aux.getIdentificador_da_Categoria() + ".setText(\"" + bundle.getString("limpar") + "\");\n"
                            + "\t\tClearText" + aux.getIdentificador_da_Categoria() + ".addActionListener(new java.awt.event.ActionListener() {\n"
                            + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                            + "\t\t\t\tClearText" + aux.getIdentificador_da_Categoria() + "ActionPerformed(evt);\n"
                            + "\t\t\t}\n"
                            + "\t\t});\n\n"
                            
                            /*
                             * Cria TextPane
                             */
                    
                            + "\t\tText" + aux.getIdentificador_da_Categoria() +  ".setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));\n"
                            + "\t\tText" + aux.getIdentificador_da_Categoria() +  ".setEditable(false);\n"
                            + "\t\tjScrollPane" + aux.getIdentificador_da_Categoria() +  ".setViewportView(Text" + aux.getIdentificador_da_Categoria() +");\n\n"  
                
                            /*
                             * Cria Label Utilizando o Nome da Categoria
                             */
                    
                            +"\t\tjLabel" + aux.getIdentificador_da_Categoria() + ".setFont(new java.awt.Font(\"Tahoma\", 0, 12));\n"
                            + "\t\tjLabel" + aux.getIdentificador_da_Categoria() + ".setForeground(new java.awt.Color(255, 255, 255));\n"
                            + "\t\tjLabel" + aux.getIdentificador_da_Categoria() + ".setText(\"" + aux.getNome_da_Categoria() + "\");\n\n"
                    
                            /*
                             * Cria o Help Icon
                             */
                            
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setForeground(new java.awt.Color(0, 0, 0, 0));\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setBackground(new java.awt.Color(0, 0, 0, 0));\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/"+PROJETO.getName()+"/source/help_icon.png\")));\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setToolTipText(\""+toolTipText+"\");\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setBorder(null);\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".addActionListener(new java.awt.event.ActionListener() {\n" 
                            + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n" 
                            + "\t\t\t\t" + funcao + "(evt);\n" 
                            + "\t\t}\n" 
                            + "\t\t});";
                }
                else{
                            /*
                             * Cria Label
                             */
                    
                    texto  += "\t\tjLabel" + aux.getIdentificador_da_Categoria() + ".setFont(new java.awt.Font(\"Tahoma\", 0, 12));\n"
                            + "\t\tjLabel" + aux.getIdentificador_da_Categoria() + ".setForeground(new java.awt.Color(255, 255, 255));\n"
                            + "\t\tjLabel" + aux.getIdentificador_da_Categoria() + ".setText(\"" + aux.getNome_da_Categoria() + "\");\n"
                            
                            /*
                             * Cria o Help Icon
                             */
                            
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setForeground(new java.awt.Color(0, 0, 0, 0));\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setBackground(new java.awt.Color(0, 0, 0, 0));\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setIcon(new javax.swing.ImageIcon(getClass().getResource(\"/"+PROJETO.getName()+"/source/help_icon.png\")));\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setToolTipText(\""+toolTipText+"\");\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".setBorder(null);\n" 
                            + "\t\tjButton" + aux.getIdentificador_da_Categoria() + ".addActionListener(new java.awt.event.ActionListener() {\n" 
                            + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n" 
                            + "\t\t\t\t" + funcao + "(evt);\n" 
                            + "\t\t}\n" 
                            + "\t\t});"
                            
                            /*
                             * Cria TextPane
                             */
                            
                            + "\t\tText" + aux.getIdentificador_da_Categoria() +  ".setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));\n"
                            + "\t\tText" + aux.getIdentificador_da_Categoria() +  ".setEditable(true);\n"
                            + "\t\tText" + aux.getIdentificador_da_Categoria() +  ".setPlaceholder(\"" + aux.getTexto_da_Categoria() + "\");\n"
                            + "\t\tText" + aux.getIdentificador_da_Categoria() +  ".addFocusListener(new java.awt.event.FocusAdapter() {\n"
                            + "\t\t\tpublic void focusLost(java.awt.event.FocusEvent evt) {\n"
                            + "\t\t\t\tText" + aux.getIdentificador_da_Categoria() + "FocusLost(evt);\n"
                            + "\t\t\t}\n"
                            + "\t\t});\n"
                            + "\t\tjScrollPane" + aux.getIdentificador_da_Categoria() +  ".setViewportView(Text" + aux.getIdentificador_da_Categoria() +");\n\n"
                    
                            /*
                             * Cria Botão 
                             */
                            
                            + "\t\tClearText" + aux.getIdentificador_da_Categoria() + ".setText(\"" + bundle.getString("limpar") + "\");\n"
                            + "\t\tClearText" + aux.getIdentificador_da_Categoria() + ".addActionListener(new java.awt.event.ActionListener() {\n"
                            + "\t\t\tpublic void actionPerformed(java.awt.event.ActionEvent evt) {\n"
                            + "\t\t\t\tClearText" + aux.getIdentificador_da_Categoria() + "ActionPerformed(evt);\n"
                            + "\t\t\t}\n"
                            + "\t\t});\n\n";
                    
                }
                
            }
            
            /*
             *  Configura Variaveis Extras
             */
            
            Iterator<String> it = extras.keySet().iterator();
            for(String variavelExtra : extras.values()){
                
                texto  += "\t\tjLabel" + variavelExtra + ".setFont(new java.awt.Font(\"Tahoma\", 0, 12));\n"
                        + "\t\tjLabel" + variavelExtra + ".setForeground(new java.awt.Color(255, 255, 255));\n"
                        + "\t\tjLabel" + variavelExtra + ".setText(\"" + it.next() + "\");\n\n"
                        + "\t\tText"   + variavelExtra + ".setBackground(new java.awt.Color(0, 102, 153));\n"
                        + "\t\tText"   + variavelExtra + ".setFont(new java.awt.Font(\"Tahoma\", 1, 12));\n"
                        + "\t\tText"   + variavelExtra + ".setBorder(null);\n\n"
                        + "\t\tText"   + variavelExtra + ".setText(\"" + variavelExtra + "\");\n\n";
                        
            }
            
                    /*
                     * Estrutura jPanel1
                     */
            
            texto  += "\t\tjavax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);\n"
                    + "\t\tjPanel1.setLayout(jPanel1Layout);\n"
                    + "\t\tjPanel1Layout.setHorizontalGroup(\n"
                    + "\t\t\tjPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t.addGroup(jPanel1Layout.createSequentialGroup()\n"
                    + "\t\t\t\t.addGap(10, 10, 10)\n"
                    + "\t\t\t\t.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n";
                    
            for(Categoria aux : CATEGORIAS){
                if(aux.getTipo_da_Categoria() != 2){
                    
                    texto  += "\t\t\t\t\t.addGroup(jPanel1Layout.createSequentialGroup()\n"
                            + "\t\t\t\t\t.addComponent(jButton" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                            + "\t\t\t\t\t\t.addGap(5,5,5)\n"
                            + "\t\t\t\t\t\t.addComponent(jLabel" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                            + "\t\t\t\t\t\t.addGap(17, 17, 17))\n"
                            +"\t\t\t\t\t.addGroup(jPanel1Layout.createSequentialGroup()\n"
                            + "\t\t\t\t\t\t.addComponent(jCombo" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                            + "\t\t\t\t\t\t.addGap(17,17,17)\n"
                            + "\t\t\t\t\t\t.addComponent(jScrollPane" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                            + "\t\t\t\t\t\t.addGap(13,13,13)\n"
                            + "\t\t\t\t\t\t.addComponent(ClearText" + aux.getIdentificador_da_Categoria() + "))\n";
                
                }
                else{
                    // talvez seja necessario colocar um addGap no final
                    texto  += "\t\t\t\t\t.addGroup(jPanel1Layout.createSequentialGroup()\n"
                            + "\t\t\t\t\t.addComponent(jButton" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                            + "\t\t\t\t\t.addGap(5,5,5)\n"
                            + "\t\t\t\t\t\t.addComponent(jLabel" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                            + "\t\t\t\t\t\t.addGap(12, 12, 12)\n"
                            // foi realizada uma mudança jScrollPane
                            + "\t\t\t\t\t\t.addComponent(jScrollPane" + aux.getIdentificador_da_Categoria() +", javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                            + "\t\t\t\t\t\t.addGap(13,13,13)\n"
                            + "\t\t\t\t\t\t.addComponent(ClearText" + aux.getIdentificador_da_Categoria() + "))\n";
                }
            }
            
            texto  += "\t\t\t\t.addGap(4, 4, 4))\n"
                    + "\t\t));\n"
                    + "\t\tjPanel1Layout.setVerticalGroup(\n"
                    + "\t\t\tjPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t.addGroup(jPanel1Layout.createSequentialGroup()\n"
                    + "\t\t\t\t.addGap(2, 2, 2)\n";
            
            for(Categoria aux : CATEGORIAS){
                
                if(aux.getTipo_da_Categoria() != 2){
                    // senão funcionar verificar o codigo novamente pois foi feito mudanças
                    texto  += "\t\t\t\t.addGap(4, 4, 4)\n"
                            + "\t\t\t\t.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                            + "\t\t\t\t\t.addComponent(jLabel" + aux.getIdentificador_da_Categoria() + ", 9,9,Short.MAX_VALUE)\n"
                            + "\t\t\t\t\t.addComponent(jButton" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.DEFAULT_SIZE, 9, 20)\n"
                            + "\t\t\t\t\t)\n"
                            + "\t\t\t\t\t.addGap(2,2,2)"
                            + "\t\t\t\t.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                            + "\t\t\t\t\t.addComponent(jCombo" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                            + "\t\t\t\t\t.addComponent(jScrollPane" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                            + "\t\t\t\t\t.addComponent(ClearText" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))\n"
                            ;
                }
                else{
                
                    texto  += "\t\t\t\t.addGap(18,18,18)\n"
                            + "\t\t\t\t.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                            + "\t\t\t\t\t.addComponent(jScrollPane" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)\n"
                            + "\t\t\t\t\t.addComponent(jLabel" + aux.getIdentificador_da_Categoria() + ", 24, 24, 24)\n"
                            + "\t\t\t\t\t.addComponent(jButton" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.DEFAULT_SIZE, 9, 20)\n"
                            + "\t\t\t\t\t.addComponent(ClearText" + aux.getIdentificador_da_Categoria() + ", javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))\n";
            
                }
            }
            
            texto  += "\t\t\t\t.addContainerGap())\n"
                    + "\t\t);\n\n";
                    // foi retirado um teco de codigo qualquer coisa coloca-lo
                   
                    /*
                     * Estrutura jPanel2
                     */
                    
            texto   += "\t\tjavax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);\n"
                    + "\t\tjPanel2.setLayout(jPanel2Layout);\n"
                    + "\t\tjPanel2Layout.setHorizontalGroup(\n"
                    + "\t\t\tjPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t.addGroup(jPanel2Layout.createSequentialGroup()\n"
                    + "\t\t\t\t.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                    + "\t\t\t\t.addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 713, javax.swing.GroupLayout.PREFERRED_SIZE))\n"
                    + "\t\t);\n"
                    + "\t\tjPanel2Layout.setVerticalGroup(\n"
                    + "\t\t\tjPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t.addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)\n"
                    + "\t\t);\n\n"
                    
                    /*
                     * Estrutura Painel Extras
                     */
                    
                    + "\t\tjavax.swing.GroupLayout jPanelExtraLayout = new javax.swing.GroupLayout(jPanelExtra);\n"
                    + "\t\tjPanelExtra.setLayout(jPanelExtraLayout);\n"
                    + "\t\tjPanelExtraLayout.setHorizontalGroup(\n"
                    + "\t\t\tjPanelExtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t.addGroup(jPanelExtraLayout.createSequentialGroup()\n";
            
                    
                    int gruposCheios            = (extras.size()-1)/3;
                    int elementosExtras         = (extras.size()-1)%3;
                    int controleElementosExtras = 1;
                    ArrayList<String> valores = new ArrayList<String>(); 
                    
                    for(String aux : extras.values()) valores.add(aux);
            
                    if(valores.size()>1){
                    
                    for(int i = 0; i< 3; i++){
                    
                        texto += "\t\t\t\t.addGroup(jPanelExtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n";
                         // COLOCAR <= ?
                        for(int j = 0; j< gruposCheios;j++){
                            texto += "\t\t\t\t\t.addComponent(jLabel" + valores.get(1 + i + (j*3)) + ", javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)\n";
                        }
                        
                        if(elementosExtras != 0){
                            texto += "\t\t\t\t\t.addComponent(jLabel" + valores.get((gruposCheios*3)+ controleElementosExtras) + ", javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)\n";
                        }
                         texto += "\t\t\t\t)\n";
                         texto += "\t\t\t\t.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n"
                                + "\t\t\t\t.addGroup(jPanelExtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n";
                        
                        
                        for(int j = 0; j< gruposCheios;j++){
                            texto += "\t\t\t\t\t.addComponent(Text" + valores.get(1 + i + (j*3)) + ", javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)\n";
                        }
                        
                        if(elementosExtras != 0){
                            texto += "\t\t\t\t\t.addComponent(Text" + valores.get((gruposCheios*3)+ controleElementosExtras) + ", javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)\n";
                            elementosExtras--;
                            controleElementosExtras++;
                        }
                        
                        texto += "\t\t\t\t)\n";
                        texto += "\t\t\t\t.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)\n";
                    }
                                       
            texto  += "\t\t));\n"
                    + "\t\tjPanelExtraLayout.setVerticalGroup(\n"
                    + "\t\t\tjPanelExtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t.addGroup(jPanelExtraLayout.createSequentialGroup()\n"
                    + "\t\t\t\t.addContainerGap()\n";
                        
                     gruposCheios            = (extras.size()-1)/3;
                     elementosExtras         = (extras.size()-1)%3;
                     controleElementosExtras = 1;
                     
                     for(int i= 0; i< gruposCheios;i++){
                         texto  += "\t\t\t\t.addGroup(jPanelExtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n";
                         
                         for(int j=0;j<3;j++){
                             texto  += "\t\t\t\t\t.addComponent(jLabel" + valores.get(1 + j + (i*3)) + ")\n"
                                     + "\t\t\t\t\t.addComponent(Text"   + valores.get(1 + j + (i*3)) +", javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n";
                         }
                         
                         texto +=  "\t\t\t\t)\n"
                                 + "\t\t\t\t.addGap(18, 18, 18)\n";
                     }
                     
                     if(elementosExtras != 0){
                         texto += "\t\t\t\t.addGroup(jPanelExtraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)\n";
                         
                         for(int i=0; i< elementosExtras;i++){
                             texto  += "\t\t\t\t\t.addComponent(jLabel" + valores.get(1 + i + (gruposCheios*3)) + ")\n"
                                     + "\t\t\t\t\t.addComponent(Text"   + valores.get(1 + i + (gruposCheios*3)) +", javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)";
                         }
                         
                         texto +=  "\t\t\t\t)\n"
                                 + "\t\t\t\t.addGap(18, 18, 18)\n";
                     }
                     
                    }
                     
                     texto += "\t\t));\n\n";
                    
                    
                    /*
                     * Estrutura o Panel ID
                     */
                        
                    texto += "\t\tjavax.swing.GroupLayout IDLayout = new javax.swing.GroupLayout(ID);\n"
                    + "\t\tID.setLayout(IDLayout); \n"
                    + "\t\tIDLayout.setHorizontalGroup(\n"
                    + "\t\t\tIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t.addGroup(IDLayout.createSequentialGroup()\n"
                    + "\t\t\t\t.addGap(10, 10, 10)\n"
                    + "\t\t\t\t.addGroup(IDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t\t\t.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t.addGroup(IDLayout.createSequentialGroup()\n"
                    + "\t\t\t\t\t\t.addGroup(IDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t\t\t\t\t.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)\n";
            
                    
                    if(!valores.isEmpty())texto += "\t\t\t\t\t\t\t.addComponent(jLabel" + valores.get(0) +")\n";
                    
                    texto += ")\n"
                    + "\t\t\t\t\t\t.addGroup(IDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t\t\t\t\t.addGroup(IDLayout.createSequentialGroup()\n"
                    + "\t\t\t\t\t\t\t\t.addGap(4, 4, 4)\n"
                    + "\t\t\t\t\t\t\t\t.addComponent(TextIdOracao, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t\t\t.addGap(10, 10, 10)\n"
                    + "\t\t\t\t\t\t\t\t.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))\n"
                    + "\t\t\t\t\t\t\t.addGroup(IDLayout.createSequentialGroup()\n"
                    + "\t\t\t\t\t\t\t\t.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n";
                   // + "\t\t\t\t\t\t\t\t.addComponent(TextPontoVista, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)"
                    
                    if(!valores.isEmpty())texto += "\t\t\t\t\t\t\t\t.addComponent(Text" + valores.get(0) +", javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)";
                            
                            
                    texto += "))\n"
                    + "\t\t\t\t\t\t.addGap(8, 8, 8)\n"
                    + "\t\t\t\t\t\t.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))\n"
                    + "\t\t\t\t\t.addGroup(IDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n"
                    + "\t\t\t\t\t\t.addComponent(jPanelExtra, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t\t.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t\t.addGroup(IDLayout.createSequentialGroup()\n"
                    + "\t\t\t\t\t\t\t.addComponent(Binicio, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t\t.addGap(6, 6, 6)\n"
                    + "\t\t\t\t\t\t\t.addComponent(Bant, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t\t.addGap(6, 6, 6)\n"
                    + "\t\t\t\t\t\t\t.addComponent(jLabelCont, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)\n" 
                    + "\t\t\t\t\t\t\t.addGap(6, 6, 6)\n"
                    + "\t\t\t\t\t\t\t.addComponent(Bnext, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t\t.addGap(6, 6, 6)\n"
                    + "\t\t\t\t\t\t\t.addComponent(Bfim, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t\t.addGap(6, 6, 6)\n"
                    + "\t\t\t\t\t\t\t.addComponent(TextIr, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t\t.addGap(10, 10, 10)\n"
                    + "\t\t\t\t\t\t\t.addComponent(Bir, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t\t.addGap(90, 90, 90)\n"
                    + "\t\t\t\t\t\t\t.addComponent(Bsalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t\t.addGap(6, 6, 6)\n"
                    + "\t\t\t\t\t\t\t.addComponent(Bsair, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))\n"
                    + "\t\t\t\t.addContainerGap(18, Short.MAX_VALUE))\n"
                    + "\t\t);\n"
                    + "\t\tIDLayout.setVerticalGroup(\n"
                    + "\t\t\tIDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t.addGroup(IDLayout.createSequentialGroup()\n"
                    + "\t\t\t\t.addGap(11, 11, 11)\n"
                    + "\t\t\t\t.addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t.addGap(4, 4, 4)\n"
                    + "\t\t\t\t.addGroup(IDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t\t\t.addGroup(IDLayout.createSequentialGroup()\n"
                    + "\t\t\t\t\t\t.addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t.addGap(11, 11, 11)\n";
                            
                    /*
                     * Adiciona as Variaveis extras na Interface
                     */
                    
                    if(!valores.isEmpty())texto += "\t\t\t\t\t\t.addComponent(jLabel" + valores.get(0) + ", javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)\n";
                        
                    texto += ")\n"
                    + "\t\t\t\t\t.addGroup(IDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n"
                    + "\t\t\t\t\t\t.addGroup(javax.swing.GroupLayout.Alignment.LEADING, IDLayout.createSequentialGroup()\n"
                    + "\t\t\t\t\t\t\t.addGroup(IDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t\t\t\t\t\t.addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t\t\t\t\t.addGroup(IDLayout.createSequentialGroup()\n"
                    + "\t\t\t\t\t\t\t\t\t.addGap(8, 8, 8)\n"
                    + "\t\t\t\t\t\t\t\t\t.addComponent(TextIdOracao, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))\n"
                    + "\t\t\t\t\t\t\t.addGap(18, 18, 18)\n";
                  //  + "\t\t\t\t\t\t\t.addComponent(TextPontoVista)"
                    
                    if(!valores.isEmpty())texto += "\t\t\t\t\t\t\t.addComponent(Text" + valores.get(0) + ")\n";
                    
                    texto += ")\n"
                    + "\t\t\t\t\t\t.addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))\n"
                    + "\t\t\t\t.addGap(18, 18, 18)\n"
                    + "\t\t\t\t.addComponent(jPanelExtra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n"
                    + "\t\t\t\t.addGap(17, 17, 17)\n"
                    + "\t\t\t\t.addGroup(IDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n"
                    + "\t\t\t\t\t.addComponent(Binicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t.addComponent(Bant, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t.addComponent(jLabelCont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t.addComponent(Bnext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t.addComponent(Bfim, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t.addComponent(Bsalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t.addComponent(Bir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t.addComponent(Bsair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n"
                    + "\t\t\t\t\t.addComponent(TextIr))\n"
                    + "\t\t\t\t.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n"
                    + "\t\t);"
                    
                    + "\t\tjScrollPane1.setViewportView(ID);\n\n"
                    
                    
                    /*
                     * Estrutura A Janela Principal
                     */
                    
                    + "\t\tjavax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n" // A partir daki soh com reza braba
                    + "\t\tgetContentPane().setLayout(layout);\n"
                    + "\t\tlayout.setHorizontalGroup(\n"
                    + "\t\t\tlayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t\t.addComponent(jScrollPane1)\n"
                    + "\t\t);\n"
                    + "\t\tlayout.setVerticalGroup(\n"
                    + "\t\t\tlayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n"
                    + "\t\t\t\t.addComponent(jScrollPane1)\n"
                    + "\t\t);\n\n"
                    + "\t\tpack();\n\n"
                    + "\t\t//Atalho de teclado para o botão de salvar\n"
                    + "\t\tKeyStroke keySave = KeyStroke.getKeyStroke(KeyEvent.VK_S, Event.CTRL_MASK); \n" 
                    + "\t\tAction performSave = new AbstractAction(\"Salvar\") {  \n" 
                    + "\t\tpublic void actionPerformed(ActionEvent e) {  \n" 
                    + "\t\t\t//Salvamento\n"
                    + "\t\t\tif(!e.getActionCommand().equals(Bsalvar.getText()))\n" 
                    + "\t\t\t\tBsalvarArqActionPerformed(e);\n" 
                    + "\t\t\t}\n" 
                    + "\t\t}; \n" 
                    + "\t\tBsalvar.setAction(performSave);\n" 
                    + "\t\tBsalvar.getActionMap().put(\"performSave\", performSave);\n" 
                    + "\t\tBsalvar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(keySave, \"performSave\");\n\n"
                    + "\t}\n" // fim da reza braba kkk
                    
                    /*
                     * Método Main
                     */
                    
                    + "\tpublic static void main(String args[]){\n\n" // metodo Main
                    + "\ttry {\n"
                    + "\t\tfor (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\n"
                    + "\t\t\tif (\"Nimbus\".equals(info.getName())) {\n"
                    + "\t\t\t\tjavax.swing.UIManager.setLookAndFeel(info.getClassName());\n"
                    + "\t\t\t\tbreak;\n"
                    + "\t\t\t}\n"
                    + "\t\t}\n"
                    + "\t} catch (ClassNotFoundException ex) {\n"
                    + "\t\t java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n"
                    + "\t} catch (InstantiationException ex) {\n"
                    + "\t\tjava.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n"
                    + "\t} catch (IllegalAccessException ex) {\n"
                    + "\t\tjava.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n"
                    + "\t} catch (javax.swing.UnsupportedLookAndFeelException ex) {\n"
                    + "\t\tjava.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n"
                    + "\t}\n"
                    + "\t\tnew Main().setVisible(true) ;\n" // Referencia a Classe Main
                    + "\t}\n"
                    
                    /*
                     * Declara Variaveis
                     */
                    
                    + "\tprivate javax.swing.JScrollPane jScrollPane1 ; \n"
                    + "\tprivate javax.swing.JPanel ID ;\n"
                    + "\tprivate javax.swing.JLabel jLabelCont ;\n"
                    + "\tprivate javax.swing.JButton Binicio ;\n"
                    + "\tprivate javax.swing.JButton Bfim ; \n"
                    + "\tprivate javax.swing.JButton Bant; \n"
                    + "\tprivate javax.swing.JButton Bnext; \n"
                    + "\tprivate javax.swing.JButton Bir;\n"
                    + "\tprivate javax.swing.JButton Bsair;\n"
                    + "\tprivate javax.swing.JButton Bsalvar;\n"
                    + "\tprivate javax.swing.JTextPane DisplayP;\n"
                    + "\tprivate javax.swing.JScrollPane jScrollPane2;\n"
                    + "\tprivate javax.swing.JTextPane TextFrase;\n" // alterar todas as ocorrencias para TextDocument 
                    + "\tprivate javax.swing.JScrollPane jScrollPane3;\n"
                    + "\tprivate javax.swing.JTextField TextIdOracao;\n" // alterar todas as ocorrencias para TextIdDocument
                    + "\tprivate javax.swing.JTextField TextIr;\n"
           //         + "\tprivate javax.swing.JTextField TextPontoVista;\n" // verificar se irá precisar disso mesmo
                    + "\tprivate javax.swing.JLabel jLabel1 ;\n"// alterar todas as ocorrencias para jLabelIDDocument
                    + "\tprivate javax.swing.JLabel jLabel2;\n" // alterar todas as ocorrencias para jLabelPlainDocument
                    + "\tprivate javax.swing.JPanel jPanelExtra;\n"
                    + "\tprivate javax.swing.JPanel jPanel2;\n"
                    + "\tprivate javax.swing.JPanel jPanel1;\n"
                    + "\tprivate static String temp = \"\";\n"
                    + "\tprivate static String annotator;\n"
                    + "\tpublic static boolean isSaved;\n"
                    + "\tprivate static Arquivo arquivo;\n"// talvez não seja mais necessario
                    + "\tprivate static Document auxf;\n"
                    + "\tprivate int IDnum,IDmax,IDgroup,IDgroupMax,IDant;\n"
                    + "\tprivate static ArrayList<PlainDocument> lista;\n"
                    ;
            
            /*
             * Declaração das Variaveis da Categoria
             */
            
            for(Categoria aux : CATEGORIAS){
                if(aux.getTipo_da_Categoria() != 2){
                    texto  +=  "\tprivate javax.swing.JComboBox jCombo" + aux.getIdentificador_da_Categoria() + ";\n"
                            + "\tprivate javax.swing.JLabel jLabel" + aux.getIdentificador_da_Categoria() + ";\n"
                            + "\tprivate javax.swing.JTextPane Text" + aux.getIdentificador_da_Categoria() + ";\n";
                           
                }
                else{
                    texto  += "\tprivate javax.swing.JLabel jLabel" + aux.getIdentificador_da_Categoria() + ";\n"
                            + "\tprivate PlaceholderTextPane Text" + aux.getIdentificador_da_Categoria() + ";\n";
                }
                
                    texto  += "\tprivate javax.swing.JButton jButton" + aux.getIdentificador_da_Categoria() + ";\n"
                            + "\tprivate javax.swing.JScrollPane jScrollPane" + aux.getIdentificador_da_Categoria() + ";\n"
                            + "\tprivate boolean boolean" + aux.getIdentificador_da_Categoria() + ";\n"
                            + "\tprivate javax.swing.JButton ClearText" + aux.getIdentificador_da_Categoria() + ";\n";
            }
        
            /*
             * Declaração de Variaveis Extras
             */
            
            for(String variavelExtra : extras.values()){
                texto +=  "\tprivate javax.swing.JTextField Text" + variavelExtra + ";\n"
                        + "\tprivate javax.swing.JLabel jLabel"   + variavelExtra + ";\n\n"; 
            }
            
            //Método para dar o comportamento ao botão fechar
            texto += "\tpublic WindowListener aoFecharJanela() {\n" 
                    + "\t\treturn new WindowAdapter() \n" 
                    + "\t\t{\n" 
                    + "\t\t\tpublic void windowClosing(WindowEvent evt) {\n" 
                    + "\t\t\t\tBsairActionPerformed(null);\n" 
                    + "\t\t\t}\n" 
                    + "\t\t};\n" 
                    + "\t}\n\n";
            
            //Avisos dos Help Icons
            texto += "private void avisoMutuamenteExclusivo(java.awt.event.ActionEvent evt) { \n" 
                    + "JOptionPane.showMessageDialog(this, \""+ bundle.getString("textoHelpMutuamenteExc") +"\", \""+ nomeProjeto +" - "+ bundle.getString("dica") +"\", JOptionPane.INFORMATION_MESSAGE);\n" 
                    + "}\n\n" 
                    + "private void avisoListaSimples(java.awt.event.ActionEvent evt) { \n" 
                    + "JOptionPane.showMessageDialog(this, \""+ bundle.getString("textoHelpListaSimples") +"\", \""+ nomeProjeto +" - "+ bundle.getString("dica") +"\", JOptionPane.INFORMATION_MESSAGE);\n" 
                    + "}\n\n" 
                    + "private void avisoTextoLivre(java.awt.event.ActionEvent evt) { \n" 
                    + "JOptionPane.showMessageDialog(this, \""+ bundle.getString("textoHelpTextoLivre") +"\", \""+ nomeProjeto +" - "+ bundle.getString("dica") +"\", JOptionPane.INFORMATION_MESSAGE);\n" 
                    + "}\n\n";
            
        try {             
            bw.write(texto);
            
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        finalizaClasse(bw);
        
    }
    
    public Categoria getCategoria(String nomeCategoria)
    {
        for(Categoria cat : CATEGORIAS)
            if(cat.getNome_da_Categoria().equalsIgnoreCase(nomeCategoria))
                return cat;
        
        return null;
    }
    
    public boolean verSeTemCiclo(Categoria depende, Categoria pai)
    {
        
        //Adicionar a categoria pai na lista para testar
        ArrayList<Categoria> dependencias = depende.getDependencias();
        dependencias.add(pai);
        imprimeListaAdjacencia();
        
        Categoria cat;
        
        //Deixar todos os vértices brancos
        Iterator<Categoria> it = CATEGORIAS.iterator();
        while(it.hasNext())
            it.next().setMarca(Categoria.BRANCO);
        
        //Verificar se há ciclos
        it = CATEGORIAS.iterator();
        while(it.hasNext())
        {
            cat = it.next();
            
            if(cat.getMarca()==Categoria.PRETO)
                continue;
            cat.setMarca(Categoria.CINZA);
            if(dfs(cat)) {
                dependencias.remove(dependencias.size()-1);
                return true;
            }
        }
        
        dependencias.remove(dependencias.size()-1);
        return false;
    }
    
    private void imprimeListaAdjacencia()
    {
        Iterator<Categoria> it = CATEGORIAS.iterator();
        Categoria cat;
        
        while(it.hasNext())
        {
            cat = it.next();
        }
    }
    
    private boolean dfs(Categoria cat)
    {
        Iterator<Categoria> it = cat.getDependencias().iterator();
        Categoria cat1;
        
        while(it.hasNext())
        {
            cat1 = it.next();
            if(cat1.getMarca()==Categoria.PRETO)
            {
                continue;
            }
            if(cat1.getMarca()==Categoria.CINZA)
            {
                return true;
            }
            cat1.setMarca(Categoria.CINZA);
            if(dfs(cat1))
                return true;
        }
        cat.setMarca(Categoria.PRETO);
        return false;
    }
    
    private boolean CompilaArquivos(){
        
        //criar o diretório bin
        File bin = new File(PROJETO.getAbsolutePath() + File.separator + "bin");
        bin.mkdir();
        
        String fileToCompile =  GENERATED_TOOLS.getAbsolutePath() + java.io.File.separator + PROJETO.getName() + java.io.File.separator + DIRETORIO.getName()+ java.io.File.separator + "Main.java";
        JavaCompiler compilador = ToolProvider.getSystemJavaCompiler();
	
	int compilationResult;
         
	if (System.getProperty("os.name").startsWith("Windows")) {
           compilationResult = compilador.run(null, null, null, "-encoding", "UTF-8","-cp","lib/jdom-2.0.4.jar;lib/common.jar;","-d",bin.getAbsolutePath(),"-sourcepath",GENERATED_TOOLS.getAbsolutePath(), fileToCompile);
    	} else {
           compilationResult = compilador.run(null, null, null, "-encoding", "UTF-8","-cp","lib/jdom-2.0.4.jar:lib/common.jar:","-d",bin.getAbsolutePath(),"-sourcepath",GENERATED_TOOLS.getAbsolutePath(), fileToCompile);
    	}
            
        if(compilationResult == 0)
        {
            //Transferir o Help Icon
            File helpIcon = new File(GENERATED_TOOLS.getAbsolutePath() + java.io.File.separator + PROJETO.getName() + java.io.File.separator + DIRETORIO.getName()+ java.io.File.separator + "help_icon.png");
            File diretorioBin = new File(bin.getAbsolutePath() + File.separator + PROJETO.getName() + File.separator + DIRETORIO.getName());
            copyFile(helpIcon, diretorioBin);
            
            return true;
        }
        else 
        {
            System.out.println(fileToCompile);
            return false;
        }
    }
    
    private void constroiJar(){

        if(CompilaArquivos()){
           
            try {
                
                File config = new File("config");
                File aux = new File(config,"MANIFEST.MF");
                BufferedWriter bw2 = new BufferedWriter(new FileWriter(aux));
                bw2.write("Manifest-Version: 1.0\n");
                bw2.write("Created-By: Tiago Missão\n");
                bw2.write("Main-Class: " + PROJETO.getName() + "." + DIRETORIO.getName() +".Main\n");
                bw2.write("Class-Path: lib/jdom-2.0.4.jar lib/common.jar\n");
                bw2.flush();
                bw2.close();
                Runtime.getRuntime().exec("jar -cvmf config/MANIFEST.MF "+ PROJETO.getName() +".jar -C "+ PROJETO.getAbsolutePath() + File.separator +"bin " + PROJETO.getName() + java.io.File.separator + DIRETORIO.getName());
                //aux.delete();
            } catch (IOException ex) {
                Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    
    }
    
    private void transfereIcon()
    {
        File icon = new File("config/help_icon.png");
        File dirDestino = new File(PROJETO.getAbsolutePath() + File.separator + DIRETORIO.getName());
        
        copyFile(icon, dirDestino);
    }
    
    private void clonaLib(){
    
        File jDom  = new File("lib/jdom-2.0.4.jar");
        File common = new File("lib/common.jar");
        File lib = new File(PROJETO,"lib");
        File configNovo = new File(PROJETO,"config");
        
        lib.mkdir();
        configNovo.mkdir();
        
        copyFile(jDom,lib);
        copyFile(common,lib);
  
    }
    
    private void clonaArquivosConfig(){
        
        File copia = new File(PROJETO,"config");
        File original = new File("config");
        
        copia.mkdir();
        
        copySubFolders(original, copia);
        
    }
    
    private void criaDiretorioDados(){
        
        File dirDados = new File(PROJETO, "dados");
        String[] arquivos;
        
        dirDados.mkdir();
        
        //Pegar os arquivos da lista e colocar no diretório de dados
        for(File arq : this.CORPUS)
        {
            copyFile(arq, dirDados);
        }
        
        try
        {
            //Escrever um arquivo com a sequência de leitura dos arquivos
            File aux = new File(dirDados,"sequencia.conf");
            BufferedWriter bw2 = new BufferedWriter(new FileWriter(aux));
            Enumeration<String> listaCorpus = this.CORPUS_MODEL.elements();
            while(listaCorpus.hasMoreElements())
            {
                arquivos = listaCorpus.nextElement().split("\\\\");
                bw2.write(arquivos[arquivos.length-1]+"\n");
            }
            bw2.flush();
            bw2.close();
        }
        catch(Exception e)
        {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, e);
        }
    }
    
    private void moveJar(){
        try {
            Thread.sleep(5000);
        } catch (InterruptedException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        File copia    = new File(PROJETO,PROJETO.getName()+ ".jar");
        File original = new File(PROJETO.getName() + ".jar");
        
        copyFile(original, copia);
        original.delete();
        
    }
    
    private void copySubFolders(File original,File copia){
        String nomes[] = original.list();
        File originalFiles[] = original.listFiles();
        File files[]   = new File[nomes.length];
        
        for(int i=0;i<nomes.length;i++) files[i] = new File(nomes[i]);
        
        if(files.length != 0){
            System.out.println(original.getName() + ":");
            for(int i=0;i<files.length;i++){
                //System.out.println(files[i]);
                //System.out.println(nomes[i]);
                if(originalFiles[i].isDirectory()){
                    File diretorio = new File(copia,files[i].getName());
                    diretorio.mkdir();
                    copySubFolders(originalFiles[i], diretorio);
                }
                else{
                    File clone = new File(copia, files[i].getName());
                    copyFile(originalFiles[i],clone);
                }
            }
        }
    }
    
    public static void copyFile(File source, File destination){
    //
    // if the destination is a dir, what we really want to do is create
    // a file with the same name in that dir
    //
    if (destination.isDirectory())
      destination = new File(destination, source.getName());

    FileInputStream input;
        try {
            input = new FileInputStream(source);
            copyFile(input, destination);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
  }

  public static void copyFile(InputStream input, File destination){
    OutputStream output = null;
        try {
            output = new FileOutputStream(destination);
            byte[] buffer = new byte[1024];

            int bytesRead = input.read(buffer);

            while (bytesRead >= 0) {
              output.write(buffer, 0, bytesRead);
              bytesRead = input.read(buffer);
            }

            input.close();

            output.close();
        } catch (IOException ex) {
            Logger.getLogger(MetaAnn.class.getName()).log(Level.SEVERE, null, ex);
        }
  }
    
  protected void controlarBotoes()
  {
      if(this.Lista_de_Categorias.getSelectedIndex()<0)
      {
          this.Botao_Editar_Categoria.setEnabled(false);
          this.Botao_Remover_Categoria.setEnabled(false);
      }
      else
      {
          this.Botao_Editar_Categoria.setEnabled(true);
          this.Botao_Remover_Categoria.setEnabled(true);
      }
  }
  
    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MetaAnn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MetaAnn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MetaAnn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MetaAnn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MetaAnn().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Botao_Adiciona_Categoria;
    private javax.swing.JButton Botao_Adiciona_Corpus;
    private javax.swing.JButton Botao_Cancelar;
    private javax.swing.JButton Botao_Categoria_Abaixo;
    private javax.swing.JButton Botao_Categoria_Acima;
    private javax.swing.JButton Botao_Configuracao;
    private javax.swing.JButton Botao_Corpus_Abaixo;
    private javax.swing.JButton Botao_Corpus_Acima;
    private javax.swing.JButton Botao_Editar_Categoria;
    private javax.swing.JButton Botao_Finalizar;
    private javax.swing.JButton Botao_Remover_Categoria;
    private javax.swing.JButton Botao_Remover_Corpus;
    private javax.swing.JButton Button_Edita_Informacao_Extra;
    private javax.swing.JButton Button_Exclui_Informacao_Extra;
    private javax.swing.JButton Button_Inclui_Informacao_Extra;
    private javax.swing.JList<String> Lista_Corpus;
    private javax.swing.JList Lista_Opcoes_da_Categoria;
    private javax.swing.JList Lista_de_Categorias;
    private javax.swing.JList Lista_de_Informacoes_Corpus;
    private javax.swing.JList Lista_de_Informacoes_Ferramenta_Gerada;
    private javax.swing.JTextField Text_Identificador_da_Categoria;
    private javax.swing.JTextField Text_Tipo_da_Categoria;
    private javax.swing.JMenuItem itemManual;
    private javax.swing.JMenuItem itemSobre;
    private javax.swing.JButton jButton_Vai1;
    private javax.swing.JButton jButton_Volta1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelExtra;
    private javax.swing.JLabel jLabelExtra1;
    private javax.swing.JLabel jLabelExtra2;
    private javax.swing.JLabel jLabelExtra3;
    private javax.swing.JLabel jLabelIdentificador;
    private javax.swing.JLabel jLabelPrincipal;
    private javax.swing.JLabel jLabelTipoDaOpcao;
    private javax.swing.JMenu jMenuAjuda;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemEnglish;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemPortugues;
    private javax.swing.JMenu jMenuLanguage;
    private javax.swing.JMenu jMenuSettings;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
    }
}
